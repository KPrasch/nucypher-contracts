{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes16",
          "name": "policyId",
          "type": "bytes16"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sponsor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "startTimestamp",
          "type": "uint64"
        },
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "endTimestamp",
          "type": "uint64"
        }
      ],
      "name": "PolicyCreated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "RATE_PER_SECOND",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes16",
          "name": "_policyId",
          "type": "bytes16"
        },
        {
          "internalType": "address",
          "name": "_policyOwner",
          "type": "address"
        },
        {
          "internalType": "uint64",
          "name": "_startTimestamp",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "_endTimestamp",
          "type": "uint64"
        }
      ],
      "name": "createPolicy",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes16",
          "name": "_policyID",
          "type": "bytes16"
        }
      ],
      "name": "isPolicyActive",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes16",
          "name": "",
          "type": "bytes16"
        }
      ],
      "name": "policies",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "sponsor",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint64",
          "name": "startTimestamp",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "endTimestamp",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "sweep",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/SubscriptionManager.sol"
  },
  "ast": {
    "absolutePath": "contracts/SubscriptionManager.sol",
    "exportedSymbols": {
      "SubscriptionManager": [
        244
      ]
    },
    "id": 245,
    "license": "AGPL-3.0-or-later",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "47:23:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "SubscriptionManager",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 244,
        "linearizedBaseContracts": [
          244
        ],
        "name": "SubscriptionManager",
        "nameLocation": "81:19:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 4,
            "mutability": "constant",
            "name": "RATE_PER_DAY",
            "nameLocation": "133:12:0",
            "nodeType": "VariableDeclaration",
            "scope": 244,
            "src": "108:47:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "108:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3530",
              "id": 3,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "148:7:0",
              "subdenomination": "gwei",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_50000000000_by_1",
                "typeString": "int_const 50000000000"
              },
              "value": "50"
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "functionSelector": "4d164f61",
            "id": 9,
            "mutability": "constant",
            "name": "RATE_PER_SECOND",
            "nameLocation": "185:15:0",
            "nodeType": "VariableDeclaration",
            "scope": 244,
            "src": "161:63:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "161:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "id": 8,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "id": 6,
                "name": "RATE_PER_DAY",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4,
                "src": "203:12:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "BinaryOperation",
              "operator": "/",
              "rightExpression": {
                "hexValue": "31",
                "id": 7,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "218:6:0",
                "subdenomination": "days",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_86400_by_1",
                  "typeString": "int_const 86400"
                },
                "value": "1"
              },
              "src": "203:21:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "SubscriptionManager.Policy",
            "id": 18,
            "members": [
              {
                "constant": false,
                "id": 11,
                "mutability": "mutable",
                "name": "sponsor",
                "nameLocation": "303:7:0",
                "nodeType": "VariableDeclaration",
                "scope": 18,
                "src": "287:23:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 10,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "287:15:0",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 13,
                "mutability": "mutable",
                "name": "owner",
                "nameLocation": "328:5:0",
                "nodeType": "VariableDeclaration",
                "scope": 18,
                "src": "320:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 12,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "320:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 15,
                "mutability": "mutable",
                "name": "startTimestamp",
                "nameLocation": "350:14:0",
                "nodeType": "VariableDeclaration",
                "scope": 18,
                "src": "343:21:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint64",
                  "typeString": "uint64"
                },
                "typeName": {
                  "id": 14,
                  "name": "uint64",
                  "nodeType": "ElementaryTypeName",
                  "src": "343:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 17,
                "mutability": "mutable",
                "name": "endTimestamp",
                "nameLocation": "381:12:0",
                "nodeType": "VariableDeclaration",
                "scope": 18,
                "src": "374:19:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint64",
                  "typeString": "uint64"
                },
                "typeName": {
                  "id": 16,
                  "name": "uint64",
                  "nodeType": "ElementaryTypeName",
                  "src": "374:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Policy",
            "nameLocation": "238:6:0",
            "nodeType": "StructDefinition",
            "scope": 244,
            "src": "231:169:0",
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 30,
            "name": "PolicyCreated",
            "nameLocation": "412:13:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 29,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "policyId",
                  "nameLocation": "451:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 30,
                  "src": "435:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes16",
                    "typeString": "bytes16"
                  },
                  "typeName": {
                    "id": 19,
                    "name": "bytes16",
                    "nodeType": "ElementaryTypeName",
                    "src": "435:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes16",
                      "typeString": "bytes16"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sponsor",
                  "nameLocation": "485:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 30,
                  "src": "469:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "469:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "518:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 30,
                  "src": "502:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "502:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "startTimestamp",
                  "nameLocation": "540:14:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 30,
                  "src": "533:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 25,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "533:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "endTimestamp",
                  "nameLocation": "571:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 30,
                  "src": "564:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 27,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "564:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "425:164:0"
            },
            "src": "406:184:0"
          },
          {
            "constant": false,
            "functionSelector": "8da5cb5b",
            "id": 32,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "623:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 244,
            "src": "600:28:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 31,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "600:15:0",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "713c0e57",
            "id": 37,
            "mutability": "mutable",
            "name": "policies",
            "nameLocation": "669:8:0",
            "nodeType": "VariableDeclaration",
            "scope": 244,
            "src": "634:43:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes16_$_t_struct$_Policy_$18_storage_$",
              "typeString": "mapping(bytes16 => struct SubscriptionManager.Policy)"
            },
            "typeName": {
              "id": 36,
              "keyType": {
                "id": 33,
                "name": "bytes16",
                "nodeType": "ElementaryTypeName",
                "src": "643:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes16",
                  "typeString": "bytes16"
                }
              },
              "nodeType": "Mapping",
              "src": "634:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes16_$_t_struct$_Policy_$18_storage_$",
                "typeString": "mapping(bytes16 => struct SubscriptionManager.Policy)"
              },
              "valueType": {
                "id": 35,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 34,
                  "name": "Policy",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 18,
                  "src": "654:6:0"
                },
                "referencedDeclaration": 18,
                "src": "654:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Policy_$18_storage_ptr",
                  "typeString": "struct SubscriptionManager.Policy"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 48,
              "nodeType": "Block",
              "src": "697:44:0",
              "statements": [
                {
                  "expression": {
                    "id": 46,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 40,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32,
                      "src": "707:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 43,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "723:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 44,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "723:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 42,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "715:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 41,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "715:8:0",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 45,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "715:19:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "707:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 47,
                  "nodeType": "ExpressionStatement",
                  "src": "707:27:0"
                }
              ]
            },
            "id": 49,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 38,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "695:2:0"
            },
            "returnParameters": {
              "id": 39,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "697:0:0"
            },
            "scope": 244,
            "src": "684:57:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 101,
              "nodeType": "Block",
              "src": "923:450:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 68,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          },
                          "id": 63,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 61,
                            "name": "_startTimestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 55,
                            "src": "954:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 62,
                            "name": "_endTimestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 57,
                            "src": "972:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "src": "954:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 67,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 64,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "1001:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 65,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "1001:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 66,
                            "name": "_endTimestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 57,
                            "src": "1019:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "src": "1001:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "954:78:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c69642074696d657374616d7073",
                        "id": 69,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1046:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d13ce2008fdeb7fc794b4b53783363d1e4b47fe95f36462fc20fc0c6be1fe852",
                          "typeString": "literal_string \"Invalid timestamps\""
                        },
                        "value": "Invalid timestamps"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d13ce2008fdeb7fc794b4b53783363d1e4b47fe95f36462fc20fc0c6be1fe852",
                          "typeString": "literal_string \"Invalid timestamps\""
                        }
                      ],
                      "id": 60,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "933:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 70,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "933:143:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 71,
                  "nodeType": "ExpressionStatement",
                  "src": "933:143:0"
                },
                {
                  "assignments": [
                    73
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 73,
                      "mutability": "mutable",
                      "name": "duration",
                      "nameLocation": "1093:8:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 101,
                      "src": "1086:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "typeName": {
                        "id": 72,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "1086:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 77,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    },
                    "id": 76,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 74,
                      "name": "_endTimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57,
                      "src": "1104:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 75,
                      "name": "_startTimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55,
                      "src": "1120:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "1104:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1086:49:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 91,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          },
                          "id": 81,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 79,
                            "name": "duration",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73,
                            "src": "1166:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 80,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1177:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1166:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 90,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 82,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1194:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 83,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "1194:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 89,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 84,
                              "name": "RATE_PER_SECOND",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9,
                              "src": "1207:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "id": 87,
                                  "name": "duration",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 73,
                                  "src": "1232:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  }
                                ],
                                "id": 86,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1225:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint64_$",
                                  "typeString": "type(uint64)"
                                },
                                "typeName": {
                                  "id": 85,
                                  "name": "uint64",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1225:6:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 88,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1225:16:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            "src": "1207:34:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1194:47:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1166:75:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 78,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1145:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 92,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1145:106:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 93,
                  "nodeType": "ExpressionStatement",
                  "src": "1145:106:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 95,
                        "name": "_policyId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51,
                        "src": "1310:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes16",
                          "typeString": "bytes16"
                        }
                      },
                      {
                        "id": 96,
                        "name": "_policyOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53,
                        "src": "1321:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 97,
                        "name": "_startTimestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55,
                        "src": "1335:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "id": 98,
                        "name": "_endTimestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57,
                        "src": "1352:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes16",
                          "typeString": "bytes16"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      ],
                      "id": 94,
                      "name": "_createPolicy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 192,
                      "src": "1296:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes16_$_t_address_$_t_uint64_$_t_uint64_$returns$_t_struct$_Policy_$18_storage_ptr_$",
                        "typeString": "function (bytes16,address,uint64,uint64) returns (struct SubscriptionManager.Policy storage pointer)"
                      }
                    },
                    "id": 99,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1296:70:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Policy_$18_storage_ptr",
                      "typeString": "struct SubscriptionManager.Policy storage pointer"
                    }
                  },
                  "id": 100,
                  "nodeType": "ExpressionStatement",
                  "src": "1296:70:0"
                }
              ]
            },
            "functionSelector": "5193de9c",
            "id": 102,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createPolicy",
            "nameLocation": "756:12:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 58,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51,
                  "mutability": "mutable",
                  "name": "_policyId",
                  "nameLocation": "786:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 102,
                  "src": "778:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes16",
                    "typeString": "bytes16"
                  },
                  "typeName": {
                    "id": 50,
                    "name": "bytes16",
                    "nodeType": "ElementaryTypeName",
                    "src": "778:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes16",
                      "typeString": "bytes16"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53,
                  "mutability": "mutable",
                  "name": "_policyOwner",
                  "nameLocation": "813:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 102,
                  "src": "805:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 52,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "805:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 55,
                  "mutability": "mutable",
                  "name": "_startTimestamp",
                  "nameLocation": "842:15:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 102,
                  "src": "835:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 54,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "835:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 57,
                  "mutability": "mutable",
                  "name": "_endTimestamp",
                  "nameLocation": "874:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 102,
                  "src": "867:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 56,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "867:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "768:125:0"
            },
            "returnParameters": {
              "id": 59,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "923:0:0"
            },
            "scope": 244,
            "src": "747:626:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 191,
              "nodeType": "Block",
              "src": "1867:640:0",
              "statements": [
                {
                  "expression": {
                    "id": 121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 117,
                      "name": "policy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 115,
                      "src": "1877:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Policy_$18_storage_ptr",
                        "typeString": "struct SubscriptionManager.Policy storage pointer"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 118,
                        "name": "policies",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37,
                        "src": "1886:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes16_$_t_struct$_Policy_$18_storage_$",
                          "typeString": "mapping(bytes16 => struct SubscriptionManager.Policy storage ref)"
                        }
                      },
                      "id": 120,
                      "indexExpression": {
                        "id": 119,
                        "name": "_policyId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105,
                        "src": "1895:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes16",
                          "typeString": "bytes16"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1886:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Policy_$18_storage",
                        "typeString": "struct SubscriptionManager.Policy storage ref"
                      }
                    },
                    "src": "1877:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Policy_$18_storage_ptr",
                      "typeString": "struct SubscriptionManager.Policy storage pointer"
                    }
                  },
                  "id": 122,
                  "nodeType": "ExpressionStatement",
                  "src": "1877:28:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 128,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 124,
                            "name": "policy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 115,
                            "src": "1936:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Policy_$18_storage_ptr",
                              "typeString": "struct SubscriptionManager.Policy storage pointer"
                            }
                          },
                          "id": 125,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "endTimestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17,
                          "src": "1936:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "id": 126,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "1958:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 127,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "1958:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1936:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506f6c6963792069732063757272656e746c7920616374697665",
                        "id": 129,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1987:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e3339add1fc1c1d8c133d098db0d1021bb8c3f2996c9977a091db0ae1e4089b0",
                          "typeString": "literal_string \"Policy is currently active\""
                        },
                        "value": "Policy is currently active"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e3339add1fc1c1d8c133d098db0d1021bb8c3f2996c9977a091db0ae1e4089b0",
                          "typeString": "literal_string \"Policy is currently active\""
                        }
                      ],
                      "id": 123,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1915:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1915:110:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 131,
                  "nodeType": "ExpressionStatement",
                  "src": "1915:110:0"
                },
                {
                  "expression": {
                    "id": 140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 132,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 115,
                        "src": "2036:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Policy_$18_storage_ptr",
                          "typeString": "struct SubscriptionManager.Policy storage pointer"
                        }
                      },
                      "id": 134,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "sponsor",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11,
                      "src": "2036:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 137,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2061:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2061:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 136,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2053:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 135,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2053:8:0",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 139,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2053:19:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "2036:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 141,
                  "nodeType": "ExpressionStatement",
                  "src": "2036:36:0"
                },
                {
                  "expression": {
                    "id": 146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 142,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 115,
                        "src": "2082:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Policy_$18_storage_ptr",
                          "typeString": "struct SubscriptionManager.Policy storage pointer"
                        }
                      },
                      "id": 144,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "startTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15,
                      "src": "2082:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 145,
                      "name": "_startTimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 109,
                      "src": "2106:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "2082:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 147,
                  "nodeType": "ExpressionStatement",
                  "src": "2082:39:0"
                },
                {
                  "expression": {
                    "id": 152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 148,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 115,
                        "src": "2131:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Policy_$18_storage_ptr",
                          "typeString": "struct SubscriptionManager.Policy storage pointer"
                        }
                      },
                      "id": 150,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "endTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17,
                      "src": "2131:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 151,
                      "name": "_endTimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 111,
                      "src": "2153:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "2131:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 153,
                  "nodeType": "ExpressionStatement",
                  "src": "2131:35:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 157,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 154,
                        "name": "_policyOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 107,
                        "src": "2181:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "expression": {
                          "id": 155,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2197:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2197:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "2181:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 163,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 158,
                        "name": "_policyOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 107,
                        "src": "2211:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 161,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2235:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 160,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2227:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 159,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2227:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 162,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2227:10:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "2211:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2181:56:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 172,
                  "nodeType": "IfStatement",
                  "src": "2177:114:0",
                  "trueBody": {
                    "id": 171,
                    "nodeType": "Block",
                    "src": "2239:52:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 169,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 165,
                              "name": "policy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 115,
                              "src": "2253:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Policy_$18_storage_ptr",
                                "typeString": "struct SubscriptionManager.Policy storage pointer"
                              }
                            },
                            "id": 167,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13,
                            "src": "2253:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 168,
                            "name": "_policyOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 107,
                            "src": "2268:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2253:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 170,
                        "nodeType": "ExpressionStatement",
                        "src": "2253:27:0"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 174,
                        "name": "_policyId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105,
                        "src": "2333:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes16",
                          "typeString": "bytes16"
                        }
                      },
                      {
                        "expression": {
                          "id": 175,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2356:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 176,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2356:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 182,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 177,
                            "name": "_policyOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 107,
                            "src": "2380:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 180,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2404:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 179,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2396:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 178,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2396:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 181,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2396:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2380:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseExpression": {
                          "id": 185,
                          "name": "_policyOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 107,
                          "src": "2422:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 186,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "Conditional",
                        "src": "2380:54:0",
                        "trueExpression": {
                          "expression": {
                            "id": 183,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2409:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 184,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2409:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 187,
                        "name": "_startTimestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 109,
                        "src": "2448:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "id": 188,
                        "name": "_endTimestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 111,
                        "src": "2477:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes16",
                          "typeString": "bytes16"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      ],
                      "id": 173,
                      "name": "PolicyCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30,
                      "src": "2306:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes16_$_t_address_$_t_address_$_t_uint64_$_t_uint64_$returns$__$",
                        "typeString": "function (bytes16,address,address,uint64,uint64)"
                      }
                    },
                    "id": 189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2306:194:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 190,
                  "nodeType": "EmitStatement",
                  "src": "2301:199:0"
                }
              ]
            },
            "documentation": {
              "id": 103,
              "nodeType": "StructuredDocumentation",
              "src": "1379:282:0",
              "text": " @notice Create policy\n @param _policyId Policy id\n @param _policyOwner Policy owner. Zero address means sender is owner\n @param _startTimestamp Start timestamp of the policy in seconds\n @param _endTimestamp End timestamp of the policy in seconds"
            },
            "id": 192,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_createPolicy",
            "nameLocation": "1675:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 112,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 105,
                  "mutability": "mutable",
                  "name": "_policyId",
                  "nameLocation": "1706:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 192,
                  "src": "1698:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes16",
                    "typeString": "bytes16"
                  },
                  "typeName": {
                    "id": 104,
                    "name": "bytes16",
                    "nodeType": "ElementaryTypeName",
                    "src": "1698:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes16",
                      "typeString": "bytes16"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 107,
                  "mutability": "mutable",
                  "name": "_policyOwner",
                  "nameLocation": "1733:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 192,
                  "src": "1725:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 106,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1725:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 109,
                  "mutability": "mutable",
                  "name": "_startTimestamp",
                  "nameLocation": "1762:15:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 192,
                  "src": "1755:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 108,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "1755:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 111,
                  "mutability": "mutable",
                  "name": "_endTimestamp",
                  "nameLocation": "1794:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 192,
                  "src": "1787:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 110,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "1787:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1688:125:0"
            },
            "returnParameters": {
              "id": 116,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 115,
                  "mutability": "mutable",
                  "name": "policy",
                  "nameLocation": "1855:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 192,
                  "src": "1840:21:0",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Policy_$18_storage_ptr",
                    "typeString": "struct SubscriptionManager.Policy"
                  },
                  "typeName": {
                    "id": 114,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 113,
                      "name": "Policy",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 18,
                      "src": "1840:6:0"
                    },
                    "referencedDeclaration": 18,
                    "src": "1840:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Policy_$18_storage_ptr",
                      "typeString": "struct SubscriptionManager.Policy"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1839:23:0"
            },
            "scope": 244,
            "src": "1666:841:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 207,
              "nodeType": "Block",
              "src": "2581:74:0",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 199,
                          "name": "policies",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37,
                          "src": "2598:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes16_$_t_struct$_Policy_$18_storage_$",
                            "typeString": "mapping(bytes16 => struct SubscriptionManager.Policy storage ref)"
                          }
                        },
                        "id": 201,
                        "indexExpression": {
                          "id": 200,
                          "name": "_policyID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 194,
                          "src": "2607:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes16",
                            "typeString": "bytes16"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2598:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Policy_$18_storage",
                          "typeString": "struct SubscriptionManager.Policy storage ref"
                        }
                      },
                      "id": 202,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "endTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17,
                      "src": "2598:32:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "expression": {
                        "id": 203,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "2633:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 204,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "2633:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2598:50:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 198,
                  "id": 206,
                  "nodeType": "Return",
                  "src": "2591:57:0"
                }
              ]
            },
            "functionSelector": "7ef3c6d5",
            "id": 208,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isPolicyActive",
            "nameLocation": "2522:14:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 195,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 194,
                  "mutability": "mutable",
                  "name": "_policyID",
                  "nameLocation": "2545:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 208,
                  "src": "2537:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes16",
                    "typeString": "bytes16"
                  },
                  "typeName": {
                    "id": 193,
                    "name": "bytes16",
                    "nodeType": "ElementaryTypeName",
                    "src": "2537:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes16",
                      "typeString": "bytes16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2536:19:0"
            },
            "returnParameters": {
              "id": 198,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 197,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 208,
                  "src": "2576:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 196,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2576:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2575:6:0"
            },
            "scope": 244,
            "src": "2513:142:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 242,
              "nodeType": "Block",
              "src": "2712:196:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 217,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 214,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2730:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 215,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2730:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 216,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32,
                          "src": "2744:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "2730:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 213,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2722:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2722:28:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 219,
                  "nodeType": "ExpressionStatement",
                  "src": "2722:28:0"
                },
                {
                  "assignments": [
                    221
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 221,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "2768:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 242,
                      "src": "2760:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 220,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2760:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 227,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 224,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "2786:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SubscriptionManager_$244",
                            "typeString": "contract SubscriptionManager"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_SubscriptionManager_$244",
                            "typeString": "contract SubscriptionManager"
                          }
                        ],
                        "id": 223,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2778:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 222,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2778:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 225,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2778:13:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "2778:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2760:39:0"
                },
                {
                  "assignments": [
                    229,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 229,
                      "mutability": "mutable",
                      "name": "sent",
                      "nameLocation": "2815:4:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 242,
                      "src": "2810:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 228,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2810:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 236,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 234,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2856:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "id": 230,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 210,
                          "src": "2825:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 231,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "2825:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 233,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 232,
                          "name": "balance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 221,
                          "src": "2847:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "2825:30:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 235,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2825:34:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2809:50:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 238,
                        "name": "sent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 229,
                        "src": "2877:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4661696c6564207472616e73666572",
                        "id": 239,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2883:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c2fbaba3bb1d2019934c8227a4cef7d3dc308257c2e14c94ee64b4d42e272196",
                          "typeString": "literal_string \"Failed transfer\""
                        },
                        "value": "Failed transfer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c2fbaba3bb1d2019934c8227a4cef7d3dc308257c2e14c94ee64b4d42e272196",
                          "typeString": "literal_string \"Failed transfer\""
                        }
                      ],
                      "id": 237,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2869:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2869:32:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 241,
                  "nodeType": "ExpressionStatement",
                  "src": "2869:32:0"
                }
              ]
            },
            "functionSelector": "01681a62",
            "id": 243,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sweep",
            "nameLocation": "2670:5:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 211,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 210,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "2692:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 243,
                  "src": "2676:25:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 209,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2676:15:0",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2675:27:0"
            },
            "returnParameters": {
              "id": 212,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2712:0:0"
            },
            "scope": 244,
            "src": "2661:247:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 245,
        "src": "72:2839:0",
        "usedErrors": []
      }
    ],
    "src": "47:2864:0"
  },
  "bytecode": "608060405234801561001057600080fd5b50600080546001600160a01b031916331790556106a4806100326000396000f3fe6080604052600436106100555760003560e01c806301681a621461005a5780634d164f611461007c5780635193de9c146100a4578063713c0e57146100b75780637ef3c6d51461014f5780638da5cb5b146101a6575b600080fd5b34801561006657600080fd5b5061007a610075366004610526565b6101de565b005b34801561008857600080fd5b50610091610294565b6040519081526020015b60405180910390f35b61007a6100b236600461057e565b6102a9565b3480156100c357600080fd5b506101156100d23660046105d4565b60016020819052600091825260409091208054918101546002909101546001600160a01b03928316928216916001600160401b03600160a01b9091048116911684565b604080516001600160a01b0395861681529490931660208501526001600160401b039182169284019290925216606082015260800161009b565b34801561015b57600080fd5b5061019661016a3660046105d4565b6001600160801b031916600090815260016020526040902060020154426001600160401b039091161190565b604051901515815260200161009b565b3480156101b257600080fd5b506000546101c6906001600160a01b031681565b6040516001600160a01b03909116815260200161009b565b6000546001600160a01b031633146101f557600080fd5b60405147906000906001600160a01b0384169083908381818185875af1925050503d8060008114610242576040519150601f19603f3d011682016040523d82523d6000602084013e610247565b606091505b505090508061028f5760405162461bcd60e51b815260206004820152600f60248201526e2330b4b632b2103a3930b739b332b960891b60448201526064015b60405180910390fd5b505050565b6102a662015180640ba43b7400610605565b81565b806001600160401b0316826001600160401b03161080156102d25750806001600160401b031642105b6103135760405162461bcd60e51b8152602060048201526012602482015271496e76616c69642074696d657374616d707360701b6044820152606401610286565b600061031f8383610627565b90506000816001600160401b031611801561035e57506001600160401b03811661035162015180640ba43b7400610605565b61035b919061064f565b34145b61036757600080fd5b6103738585858561037b565b505050505050565b6001600160801b0319841660009081526001602052604090206002810154426001600160401b03909116106103f25760405162461bcd60e51b815260206004820152601a60248201527f506f6c6963792069732063757272656e746c79206163746976650000000000006044820152606401610286565b80546001600160a01b0319163390811782556001820180546001600160401b03808716600160a01b0267ffffffffffffffff60a01b199092169190911790915560028301805491851667ffffffffffffffff199092169190911790556001600160a01b0385161480159061046e57506001600160a01b03841615155b15610491576001810180546001600160a01b0319166001600160a01b0386161790555b6001600160a01b038416156104a657836104a8565b335b604080516001600160401b038087168252851660208201526001600160a01b03929092169133916001600160801b03198916917fdf690468dd0cdb13875078e35d821b9459a7e0e4b5bafb1b76ad3930db25bba3910160405180910390a4949350505050565b6001600160a01b038116811461052357600080fd5b50565b60006020828403121561053857600080fd5b81356105438161050e565b9392505050565b80356001600160801b03198116811461056257600080fd5b919050565b80356001600160401b038116811461056257600080fd5b6000806000806080858703121561059457600080fd5b61059d8561054a565b935060208501356105ad8161050e565b92506105bb60408601610567565b91506105c960608601610567565b905092959194509250565b6000602082840312156105e657600080fd5b6105438261054a565b634e487b7160e01b600052601160045260246000fd5b60008261062257634e487b7160e01b600052601260045260246000fd5b500490565b60006001600160401b0383811690831681811015610647576106476105ef565b039392505050565b6000816000190483118215151615610669576106696105ef565b50029056fea2646970667358221220c82e476bc269dccddf246e2675be8ae39494add5b451020eb9872bed4469bf3364736f6c634300080a0033",
  "bytecodeSha1": "ea33714f3de876fdb2a52d6824c3ce1238a3ca62",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.10+commit.fc410830"
  },
  "contractName": "SubscriptionManager",
  "coverageMap": {
    "branches": {
      "0": {
        "SubscriptionManager._createPolicy": {
          "19": [
            1936,
            1973,
            true
          ],
          "20": [
            2181,
            2207,
            false
          ],
          "21": [
            2211,
            2237,
            false
          ],
          "22": [
            2380,
            2406,
            true
          ]
        },
        "SubscriptionManager.createPolicy": {
          "15": [
            954,
            985,
            false
          ],
          "16": [
            1001,
            1032,
            true
          ],
          "17": [
            1166,
            1178,
            false
          ],
          "18": [
            1194,
            1241,
            true
          ]
        },
        "SubscriptionManager.sweep": {
          "13": [
            2730,
            2749,
            true
          ],
          "14": [
            2877,
            2881,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "SubscriptionManager._createPolicy": {
          "6": [
            1877,
            1905
          ],
          "7": [
            1915,
            2025
          ],
          "8": [
            2036,
            2072
          ],
          "9": [
            2082,
            2121
          ],
          "10": [
            2131,
            2166
          ],
          "11": [
            2253,
            2280
          ],
          "12": [
            2301,
            2500
          ]
        },
        "SubscriptionManager.createPolicy": {
          "3": [
            933,
            1076
          ],
          "4": [
            1145,
            1251
          ],
          "5": [
            1296,
            1366
          ]
        },
        "SubscriptionManager.isPolicyActive": {
          "0": [
            2591,
            2648
          ]
        },
        "SubscriptionManager.sweep": {
          "1": [
            2722,
            2750
          ],
          "2": [
            2869,
            2901
          ]
        }
      }
    }
  },
  "dependencies": [],
  "deployedBytecode": "6080604052600436106100555760003560e01c806301681a621461005a5780634d164f611461007c5780635193de9c146100a4578063713c0e57146100b75780637ef3c6d51461014f5780638da5cb5b146101a6575b600080fd5b34801561006657600080fd5b5061007a610075366004610526565b6101de565b005b34801561008857600080fd5b50610091610294565b6040519081526020015b60405180910390f35b61007a6100b236600461057e565b6102a9565b3480156100c357600080fd5b506101156100d23660046105d4565b60016020819052600091825260409091208054918101546002909101546001600160a01b03928316928216916001600160401b03600160a01b9091048116911684565b604080516001600160a01b0395861681529490931660208501526001600160401b039182169284019290925216606082015260800161009b565b34801561015b57600080fd5b5061019661016a3660046105d4565b6001600160801b031916600090815260016020526040902060020154426001600160401b039091161190565b604051901515815260200161009b565b3480156101b257600080fd5b506000546101c6906001600160a01b031681565b6040516001600160a01b03909116815260200161009b565b6000546001600160a01b031633146101f557600080fd5b60405147906000906001600160a01b0384169083908381818185875af1925050503d8060008114610242576040519150601f19603f3d011682016040523d82523d6000602084013e610247565b606091505b505090508061028f5760405162461bcd60e51b815260206004820152600f60248201526e2330b4b632b2103a3930b739b332b960891b60448201526064015b60405180910390fd5b505050565b6102a662015180640ba43b7400610605565b81565b806001600160401b0316826001600160401b03161080156102d25750806001600160401b031642105b6103135760405162461bcd60e51b8152602060048201526012602482015271496e76616c69642074696d657374616d707360701b6044820152606401610286565b600061031f8383610627565b90506000816001600160401b031611801561035e57506001600160401b03811661035162015180640ba43b7400610605565b61035b919061064f565b34145b61036757600080fd5b6103738585858561037b565b505050505050565b6001600160801b0319841660009081526001602052604090206002810154426001600160401b03909116106103f25760405162461bcd60e51b815260206004820152601a60248201527f506f6c6963792069732063757272656e746c79206163746976650000000000006044820152606401610286565b80546001600160a01b0319163390811782556001820180546001600160401b03808716600160a01b0267ffffffffffffffff60a01b199092169190911790915560028301805491851667ffffffffffffffff199092169190911790556001600160a01b0385161480159061046e57506001600160a01b03841615155b15610491576001810180546001600160a01b0319166001600160a01b0386161790555b6001600160a01b038416156104a657836104a8565b335b604080516001600160401b038087168252851660208201526001600160a01b03929092169133916001600160801b03198916917fdf690468dd0cdb13875078e35d821b9459a7e0e4b5bafb1b76ad3930db25bba3910160405180910390a4949350505050565b6001600160a01b038116811461052357600080fd5b50565b60006020828403121561053857600080fd5b81356105438161050e565b9392505050565b80356001600160801b03198116811461056257600080fd5b919050565b80356001600160401b038116811461056257600080fd5b6000806000806080858703121561059457600080fd5b61059d8561054a565b935060208501356105ad8161050e565b92506105bb60408601610567565b91506105c960608601610567565b905092959194509250565b6000602082840312156105e657600080fd5b6105438261054a565b634e487b7160e01b600052601160045260246000fd5b60008261062257634e487b7160e01b600052601260045260246000fd5b500490565b60006001600160401b0383811690831681811015610647576106476105ef565b039392505050565b6000816000190483118215151615610669576106696105ef565b50029056fea2646970667358221220c82e476bc269dccddf246e2675be8ae39494add5b451020eb9872bed4469bf3364736f6c634300080a0033",
  "deployedSourceMap": "72:2839:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2661:247;;;;;;;;;;-1:-1:-1;2661:247:0;;;;;:::i;:::-;;:::i;:::-;;161:63;;;;;;;;;;;;;:::i;:::-;;;572:25:1;;;560:2;545:18;161:63:0;;;;;;;;747:626;;;;;;:::i;:::-;;:::i;634:43::-;;;;;;;;;;-1:-1:-1;634:43:0;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;634:43:0;;;;;;;-1:-1:-1;;;;;;;;634:43:0;;;;;;;;;;;;;-1:-1:-1;;;;;1951:15:1;;;1933:34;;2003:15;;;;1998:2;1983:18;;1976:43;-1:-1:-1;;;;;2092:15:1;;;2072:18;;;2065:43;;;;2144:15;2139:2;2124:18;;2117:43;1882:3;1867:19;634:43:0;1652:514:1;2513:142:0;;;;;;;;;;-1:-1:-1;2513:142:0;;;;;:::i;:::-;-1:-1:-1;;;;;;2598:19:0;2576:4;2598:19;;;:8;:19;;;;;:32;;;2633:15;-1:-1:-1;;;;;2598:32:0;;;:50;;2513:142;;;;2336:14:1;;2329:22;2311:41;;2299:2;2284:18;2513:142:0;2171:187:1;600:28:0;;;;;;;;;;-1:-1:-1;600:28:0;;;;-1:-1:-1;;;;;600:28:0;;;;;;-1:-1:-1;;;;;2543:32:1;;;2525:51;;2513:2;2498:18;600:28:0;2363:219:1;2661:247:0;2744:5;;-1:-1:-1;;;;;2744:5:0;2730:10;:19;2722:28;;;;;;2825:34;;2778:21;;2760:15;;-1:-1:-1;;;;;2825:14:0;;;2778:21;;2760:15;2825:34;2760:15;2825:34;2778:21;2825:14;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2809:50;;;2877:4;2869:32;;;;-1:-1:-1;;;2869:32:0;;2999:2:1;2869:32:0;;;2981:21:1;3038:2;3018:18;;;3011:30;-1:-1:-1;;;3057:18:1;;;3050:45;3112:18;;2869:32:0;;;;;;;;;2712:196;;2661:247;:::o;161:63::-;203:21;218:6;148:7;203:21;:::i;:::-;161:63;:::o;747:626::-;972:13;-1:-1:-1;;;;;954:31:0;:15;-1:-1:-1;;;;;954:31:0;;:78;;;;;1019:13;-1:-1:-1;;;;;1001:31:0;:15;:31;954:78;933:143;;;;-1:-1:-1;;;933:143:0;;3697:2:1;933:143:0;;;3679:21:1;3736:2;3716:18;;;3709:30;-1:-1:-1;;;3755:18:1;;;3748:48;3813:18;;933:143:0;3495:342:1;933:143:0;1086:15;1104:31;1120:15;1104:13;:31;:::i;:::-;1086:49;;1177:1;1166:8;-1:-1:-1;;;;;1166:12:0;;:75;;;;-1:-1:-1;;;;;;1207:34:0;;203:21;218:6;148:7;203:21;:::i;:::-;1207:34;;;;:::i;:::-;1194:9;:47;1166:75;1145:106;;;;;;1296:70;1310:9;1321:12;1335:15;1352:13;1296;:70::i;:::-;;923:450;747:626;;;;:::o;1666:841::-;-1:-1:-1;;;;;;1886:19:0;;1840:21;1886:19;;;:8;:19;;;;;1936;;;;1958:15;-1:-1:-1;;;;;1936:19:0;;;:37;1915:110;;;;-1:-1:-1;;;1915:110:0;;4451:2:1;1915:110:0;;;4433:21:1;4490:2;4470:18;;;4463:30;4529:28;4509:18;;;4502:56;4575:18;;1915:110:0;4249:350:1;1915:110:0;2036:36;;-1:-1:-1;;;;;;2036:36:0;2061:10;2036:36;;;;;;2082:21;;:39;;-1:-1:-1;;;;;2082:39:0;;;-1:-1:-1;;;2082:39:0;-1:-1:-1;;;;2082:39:0;;;;;;;;;;2131:19;;;:35;;;;;-1:-1:-1;;2131:35:0;;;;;;;;;-1:-1:-1;;;;;2181:26:0;;;;;;:56;;-1:-1:-1;;;;;;2211:26:0;;;;2181:56;2177:114;;;2253:12;;;:27;;-1:-1:-1;;;;;;2253:27:0;-1:-1:-1;;;;;2253:27:0;;;;;2177:114;-1:-1:-1;;;;;2380:26:0;;;:54;;2422:12;2380:54;;;2409:10;2380:54;2306:194;;;-1:-1:-1;;;;;4829:15:1;;;4811:34;;4881:15;;4876:2;4861:18;;4854:43;-1:-1:-1;;;;;2306:194:0;;;;;2356:10;;-1:-1:-1;;;;;;2306:194:0;;;;;4747:18:1;2306:194:0;;;;;;;1666:841;;;;;;:::o;14:139:1:-;-1:-1:-1;;;;;97:31:1;;87:42;;77:70;;143:1;140;133:12;77:70;14:139;:::o;158:263::-;225:6;278:2;266:9;257:7;253:23;249:32;246:52;;;294:1;291;284:12;246:52;333:9;320:23;352:39;385:5;352:39;:::i;:::-;410:5;158:263;-1:-1:-1;;;158:263:1:o;608:193::-;676:20;;-1:-1:-1;;;;;;725:51:1;;715:62;;705:90;;791:1;788;781:12;705:90;608:193;;;:::o;806:171::-;873:20;;-1:-1:-1;;;;;922:30:1;;912:41;;902:69;;967:1;964;957:12;982:474;1066:6;1074;1082;1090;1143:3;1131:9;1122:7;1118:23;1114:33;1111:53;;;1160:1;1157;1150:12;1111:53;1183:29;1202:9;1183:29;:::i;:::-;1173:39;;1262:2;1251:9;1247:18;1234:32;1275:39;1308:5;1275:39;:::i;:::-;1333:5;-1:-1:-1;1357:37:1;1390:2;1375:18;;1357:37;:::i;:::-;1347:47;;1413:37;1446:2;1435:9;1431:18;1413:37;:::i;:::-;1403:47;;982:474;;;;;;;:::o;1461:186::-;1520:6;1573:2;1561:9;1552:7;1548:23;1544:32;1541:52;;;1589:1;1586;1579:12;1541:52;1612:29;1631:9;1612:29;:::i;3141:127::-;3202:10;3197:3;3193:20;3190:1;3183:31;3233:4;3230:1;3223:15;3257:4;3254:1;3247:15;3273:217;3313:1;3339;3329:132;;3383:10;3378:3;3374:20;3371:1;3364:31;3418:4;3415:1;3408:15;3446:4;3443:1;3436:15;3329:132;-1:-1:-1;3475:9:1;;3273:217::o;3842:229::-;3881:4;-1:-1:-1;;;;;3978:10:1;;;;3948;;4000:12;;;3997:38;;;4015:18;;:::i;:::-;4052:13;;3842:229;-1:-1:-1;;;3842:229:1:o;4076:168::-;4116:7;4182:1;4178;4174:6;4170:14;4167:1;4164:21;4159:1;4152:9;4145:17;4141:45;4138:71;;;4189:18;;:::i;:::-;-1:-1:-1;4229:9:1;;4076:168::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    72,
    2911
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1681A62 EQ PUSH2 0x5A JUMPI DUP1 PUSH4 0x4D164F61 EQ PUSH2 0x7C JUMPI DUP1 PUSH4 0x5193DE9C EQ PUSH2 0xA4 JUMPI DUP1 PUSH4 0x713C0E57 EQ PUSH2 0xB7 JUMPI DUP1 PUSH4 0x7EF3C6D5 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1A6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7A PUSH2 0x75 CALLDATASIZE PUSH1 0x4 PUSH2 0x526 JUMP JUMPDEST PUSH2 0x1DE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x91 PUSH2 0x294 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7A PUSH2 0xB2 CALLDATASIZE PUSH1 0x4 PUSH2 0x57E JUMP JUMPDEST PUSH2 0x2A9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x115 PUSH2 0xD2 CALLDATASIZE PUSH1 0x4 PUSH2 0x5D4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP2 DUP2 ADD SLOAD PUSH1 0x2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 DIV DUP2 AND SWAP2 AND DUP5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND DUP2 MSTORE SWAP5 SWAP1 SWAP4 AND PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP2 DUP3 AND SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x9B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x196 PUSH2 0x16A CALLDATASIZE PUSH1 0x4 PUSH2 0x5D4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD TIMESTAMP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 SWAP2 AND GT SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x9B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0x1C6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x9B JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SELFBALANCE SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP4 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x242 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x247 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x28F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x2330B4B632B2103A3930B739B332B9 PUSH1 0x89 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x2A6 PUSH3 0x15180 PUSH5 0xBA43B7400 PUSH2 0x605 JUMP JUMPDEST DUP2 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND LT DUP1 ISZERO PUSH2 0x2D2 JUMPI POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND TIMESTAMP LT JUMPDEST PUSH2 0x313 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x496E76616C69642074696D657374616D7073 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x286 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31F DUP4 DUP4 PUSH2 0x627 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND GT DUP1 ISZERO PUSH2 0x35E JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND PUSH2 0x351 PUSH3 0x15180 PUSH5 0xBA43B7400 PUSH2 0x605 JUMP JUMPDEST PUSH2 0x35B SWAP2 SWAP1 PUSH2 0x64F JUMP JUMPDEST CALLVALUE EQ JUMPDEST PUSH2 0x367 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x373 DUP6 DUP6 DUP6 DUP6 PUSH2 0x37B JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 DUP2 ADD SLOAD TIMESTAMP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 SWAP2 AND LT PUSH2 0x3F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506F6C6963792069732063757272656E746C7920616374697665000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x286 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP8 AND PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x2 DUP4 ADD DUP1 SLOAD SWAP2 DUP6 AND PUSH8 0xFFFFFFFFFFFFFFFF NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EQ DUP1 ISZERO SWAP1 PUSH2 0x46E JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x491 JUMPI PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO PUSH2 0x4A6 JUMPI DUP4 PUSH2 0x4A8 JUMP JUMPDEST CALLER JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP8 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 CALLER SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT DUP10 AND SWAP2 PUSH32 0xDF690468DD0CDB13875078E35D821B9459A7E0E4B5BAFB1B76AD3930DB25BBA3 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x523 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x538 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x543 DUP2 PUSH2 0x50E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x562 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x562 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x594 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59D DUP6 PUSH2 0x54A JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x5AD DUP2 PUSH2 0x50E JUMP JUMPDEST SWAP3 POP PUSH2 0x5BB PUSH1 0x40 DUP7 ADD PUSH2 0x567 JUMP JUMPDEST SWAP2 POP PUSH2 0x5C9 PUSH1 0x60 DUP7 ADD PUSH2 0x567 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x543 DUP3 PUSH2 0x54A JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x622 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 DUP2 AND SWAP1 DUP4 AND DUP2 DUP2 LT ISZERO PUSH2 0x647 JUMPI PUSH2 0x647 PUSH2 0x5EF JUMP JUMPDEST SUB SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x669 JUMPI PUSH2 0x669 PUSH2 0x5EF JUMP JUMPDEST POP MUL SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC8 0x2E SELFBALANCE PUSH12 0xC269DCCDDF246E2675BE8AE3 SWAP5 SWAP5 0xAD 0xD5 0xB4 MLOAD MUL 0xE 0xB9 DUP8 0x2B 0xED DIFFICULTY PUSH10 0xBF3364736F6C63430008 EXP STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        72,
        2911
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        72,
        2911
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        72,
        2911
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        72,
        2911
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        72,
        2911
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        72,
        2911
      ],
      "op": "LT",
      "path": "0"
    },
    "9": {
      "fn": null,
      "offset": [
        72,
        2911
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x55"
    },
    "12": {
      "fn": null,
      "offset": [
        72,
        2911
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "13": {
      "fn": null,
      "offset": [
        72,
        2911
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        72,
        2911
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        72,
        2911
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        72,
        2911
      ],
      "op": "SHR",
      "path": "0"
    },
    "19": {
      "fn": null,
      "offset": [
        72,
        2911
      ],
      "op": "DUP1",
      "path": "0"
    },
    "20": {
      "fn": null,
      "offset": [
        72,
        2911
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x1681A62"
    },
    "25": {
      "fn": null,
      "offset": [
        72,
        2911
      ],
      "op": "EQ",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [
        72,
        2911
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5A"
    },
    "29": {
      "fn": null,
      "offset": [
        72,
        2911
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "30": {
      "fn": null,
      "offset": [
        72,
        2911
      ],
      "op": "DUP1",
      "path": "0"
    },
    "31": {
      "fn": null,
      "offset": [
        72,
        2911
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x4D164F61"
    },
    "36": {
      "fn": null,
      "offset": [
        72,
        2911
      ],
      "op": "EQ",
      "path": "0"
    },
    "37": {
      "fn": null,
      "offset": [
        72,
        2911
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7C"
    },
    "40": {
      "fn": null,
      "offset": [
        72,
        2911
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "41": {
      "fn": null,
      "offset": [
        72,
        2911
      ],
      "op": "DUP1",
      "path": "0"
    },
    "42": {
      "fn": null,
      "offset": [
        72,
        2911
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x5193DE9C"
    },
    "47": {
      "fn": null,
      "offset": [
        72,
        2911
      ],
      "op": "EQ",
      "path": "0"
    },
    "48": {
      "fn": null,
      "offset": [
        72,
        2911
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA4"
    },
    "51": {
      "fn": null,
      "offset": [
        72,
        2911
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "52": {
      "fn": null,
      "offset": [
        72,
        2911
      ],
      "op": "DUP1",
      "path": "0"
    },
    "53": {
      "fn": null,
      "offset": [
        72,
        2911
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x713C0E57"
    },
    "58": {
      "fn": null,
      "offset": [
        72,
        2911
      ],
      "op": "EQ",
      "path": "0"
    },
    "59": {
      "fn": null,
      "offset": [
        72,
        2911
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB7"
    },
    "62": {
      "fn": null,
      "offset": [
        72,
        2911
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "63": {
      "fn": null,
      "offset": [
        72,
        2911
      ],
      "op": "DUP1",
      "path": "0"
    },
    "64": {
      "fn": null,
      "offset": [
        72,
        2911
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x7EF3C6D5"
    },
    "69": {
      "fn": null,
      "offset": [
        72,
        2911
      ],
      "op": "EQ",
      "path": "0"
    },
    "70": {
      "fn": null,
      "offset": [
        72,
        2911
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14F"
    },
    "73": {
      "fn": null,
      "offset": [
        72,
        2911
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "74": {
      "fn": null,
      "offset": [
        72,
        2911
      ],
      "op": "DUP1",
      "path": "0"
    },
    "75": {
      "fn": null,
      "offset": [
        72,
        2911
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x8DA5CB5B"
    },
    "80": {
      "fn": null,
      "offset": [
        72,
        2911
      ],
      "op": "EQ",
      "path": "0"
    },
    "81": {
      "fn": null,
      "offset": [
        72,
        2911
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A6"
    },
    "84": {
      "fn": null,
      "offset": [
        72,
        2911
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "85": {
      "fn": null,
      "offset": [
        72,
        2911
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "86": {
      "fn": null,
      "offset": [
        72,
        2911
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "88": {
      "fn": null,
      "offset": [
        72,
        2911
      ],
      "op": "DUP1",
      "path": "0"
    },
    "89": {
      "first_revert": true,
      "fn": null,
      "offset": [
        72,
        2911
      ],
      "op": "REVERT",
      "path": "0"
    },
    "90": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2661,
        2908
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "91": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2661,
        2908
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "92": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2661,
        2908
      ],
      "op": "DUP1",
      "path": "0"
    },
    "93": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2661,
        2908
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "94": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2661,
        2908
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x66"
    },
    "97": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2661,
        2908
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "98": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2661,
        2908
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "100": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2661,
        2908
      ],
      "op": "DUP1",
      "path": "0"
    },
    "101": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2661,
        2908
      ],
      "op": "REVERT",
      "path": "0"
    },
    "102": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2661,
        2908
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "103": {
      "op": "POP"
    },
    "104": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2661,
        2908
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7A"
    },
    "107": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2661,
        2908
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x75"
    },
    "110": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2661,
        2908
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "111": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2661,
        2908
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "113": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2661,
        2908
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x526"
    },
    "116": {
      "fn": "SubscriptionManager.sweep",
      "jump": "i",
      "offset": [
        2661,
        2908
      ],
      "op": "JUMP",
      "path": "0"
    },
    "117": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2661,
        2908
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "118": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2661,
        2908
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DE"
    },
    "121": {
      "fn": "SubscriptionManager.sweep",
      "jump": "i",
      "offset": [
        2661,
        2908
      ],
      "op": "JUMP",
      "path": "0"
    },
    "122": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2661,
        2908
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "123": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2661,
        2908
      ],
      "op": "STOP",
      "path": "0"
    },
    "124": {
      "offset": [
        161,
        224
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "125": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        161,
        224
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "126": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        161,
        224
      ],
      "op": "DUP1",
      "path": "0"
    },
    "127": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        161,
        224
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "128": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        161,
        224
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x88"
    },
    "131": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        161,
        224
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "132": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        161,
        224
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "134": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        161,
        224
      ],
      "op": "DUP1",
      "path": "0"
    },
    "135": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        161,
        224
      ],
      "op": "REVERT",
      "path": "0"
    },
    "136": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        161,
        224
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "137": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        161,
        224
      ],
      "op": "POP",
      "path": "0"
    },
    "138": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        161,
        224
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x91"
    },
    "141": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        161,
        224
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x294"
    },
    "144": {
      "fn": "SubscriptionManager.sweep",
      "jump": "i",
      "offset": [
        161,
        224
      ],
      "op": "JUMP",
      "path": "0"
    },
    "145": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        161,
        224
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "146": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        161,
        224
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "148": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        161,
        224
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "149": {
      "op": "SWAP1"
    },
    "150": {
      "op": "DUP2"
    },
    "151": {
      "op": "MSTORE"
    },
    "152": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "154": {
      "op": "ADD"
    },
    "155": {
      "offset": [
        161,
        224
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "156": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        161,
        224
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "158": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        161,
        224
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "159": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        161,
        224
      ],
      "op": "DUP1",
      "path": "0"
    },
    "160": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        161,
        224
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "161": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        161,
        224
      ],
      "op": "SUB",
      "path": "0"
    },
    "162": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        161,
        224
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "163": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        161,
        224
      ],
      "op": "RETURN",
      "path": "0"
    },
    "164": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        747,
        1373
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "165": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        747,
        1373
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7A"
    },
    "168": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        747,
        1373
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB2"
    },
    "171": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        747,
        1373
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "172": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        747,
        1373
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "174": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        747,
        1373
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x57E"
    },
    "177": {
      "fn": "SubscriptionManager.createPolicy",
      "jump": "i",
      "offset": [
        747,
        1373
      ],
      "op": "JUMP",
      "path": "0"
    },
    "178": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        747,
        1373
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "179": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        747,
        1373
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A9"
    },
    "182": {
      "fn": "SubscriptionManager.createPolicy",
      "jump": "i",
      "offset": [
        747,
        1373
      ],
      "op": "JUMP",
      "path": "0"
    },
    "183": {
      "offset": [
        634,
        677
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "184": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        634,
        677
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "185": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        634,
        677
      ],
      "op": "DUP1",
      "path": "0"
    },
    "186": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        634,
        677
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "187": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        634,
        677
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC3"
    },
    "190": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        634,
        677
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "191": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        634,
        677
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "193": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        634,
        677
      ],
      "op": "DUP1",
      "path": "0"
    },
    "194": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        634,
        677
      ],
      "op": "REVERT",
      "path": "0"
    },
    "195": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        634,
        677
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "196": {
      "op": "POP"
    },
    "197": {
      "offset": [
        634,
        677
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x115"
    },
    "200": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        634,
        677
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD2"
    },
    "203": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        634,
        677
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "204": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        634,
        677
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "206": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        634,
        677
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5D4"
    },
    "209": {
      "fn": "SubscriptionManager.createPolicy",
      "jump": "i",
      "offset": [
        634,
        677
      ],
      "op": "JUMP",
      "path": "0"
    },
    "210": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        634,
        677
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "211": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        634,
        677
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "213": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        634,
        677
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "215": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        634,
        677
      ],
      "op": "DUP2",
      "path": "0"
    },
    "216": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        634,
        677
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "217": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        634,
        677
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "218": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        634,
        677
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "220": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        634,
        677
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "221": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        634,
        677
      ],
      "op": "DUP3",
      "path": "0"
    },
    "222": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        634,
        677
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "223": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        634,
        677
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "225": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        634,
        677
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "226": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        634,
        677
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "227": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        634,
        677
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "228": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        634,
        677
      ],
      "op": "DUP1",
      "path": "0"
    },
    "229": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        634,
        677
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "230": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        634,
        677
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "231": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        634,
        677
      ],
      "op": "DUP2",
      "path": "0"
    },
    "232": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        634,
        677
      ],
      "op": "ADD",
      "path": "0"
    },
    "233": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        634,
        677
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "234": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        634,
        677
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "236": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        634,
        677
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "237": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        634,
        677
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "238": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        634,
        677
      ],
      "op": "ADD",
      "path": "0"
    },
    "239": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        634,
        677
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "240": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "242": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "244": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "246": {
      "op": "SHL"
    },
    "247": {
      "op": "SUB"
    },
    "248": {
      "offset": [
        634,
        677
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "249": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        634,
        677
      ],
      "op": "DUP4",
      "path": "0"
    },
    "250": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        634,
        677
      ],
      "op": "AND",
      "path": "0"
    },
    "251": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        634,
        677
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "252": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        634,
        677
      ],
      "op": "DUP3",
      "path": "0"
    },
    "253": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        634,
        677
      ],
      "op": "AND",
      "path": "0"
    },
    "254": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        634,
        677
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "255": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "257": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "259": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "261": {
      "op": "SHL"
    },
    "262": {
      "op": "SUB"
    },
    "263": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "265": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "267": {
      "op": "SHL"
    },
    "268": {
      "offset": [
        634,
        677
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "269": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        634,
        677
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "270": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        634,
        677
      ],
      "op": "DIV",
      "path": "0"
    },
    "271": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        634,
        677
      ],
      "op": "DUP2",
      "path": "0"
    },
    "272": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        634,
        677
      ],
      "op": "AND",
      "path": "0"
    },
    "273": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        634,
        677
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "274": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        634,
        677
      ],
      "op": "AND",
      "path": "0"
    },
    "275": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        634,
        677
      ],
      "op": "DUP5",
      "path": "0"
    },
    "276": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        634,
        677
      ],
      "op": "JUMP",
      "path": "0"
    },
    "277": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        634,
        677
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "278": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        634,
        677
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "280": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        634,
        677
      ],
      "op": "DUP1",
      "path": "0"
    },
    "281": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        634,
        677
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "282": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "284": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "286": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "288": {
      "op": "SHL"
    },
    "289": {
      "op": "SUB"
    },
    "290": {
      "op": "SWAP6"
    },
    "291": {
      "op": "DUP7"
    },
    "292": {
      "op": "AND"
    },
    "293": {
      "op": "DUP2"
    },
    "294": {
      "op": "MSTORE"
    },
    "295": {
      "op": "SWAP5"
    },
    "296": {
      "op": "SWAP1"
    },
    "297": {
      "op": "SWAP4"
    },
    "298": {
      "op": "AND"
    },
    "299": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "301": {
      "op": "DUP6"
    },
    "302": {
      "op": "ADD"
    },
    "303": {
      "op": "MSTORE"
    },
    "304": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "306": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "308": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "310": {
      "op": "SHL"
    },
    "311": {
      "op": "SUB"
    },
    "312": {
      "op": "SWAP2"
    },
    "313": {
      "op": "DUP3"
    },
    "314": {
      "op": "AND"
    },
    "315": {
      "op": "SWAP3"
    },
    "316": {
      "op": "DUP5"
    },
    "317": {
      "op": "ADD"
    },
    "318": {
      "op": "SWAP3"
    },
    "319": {
      "op": "SWAP1"
    },
    "320": {
      "op": "SWAP3"
    },
    "321": {
      "op": "MSTORE"
    },
    "322": {
      "op": "AND"
    },
    "323": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "325": {
      "op": "DUP3"
    },
    "326": {
      "op": "ADD"
    },
    "327": {
      "op": "MSTORE"
    },
    "328": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "330": {
      "op": "ADD"
    },
    "331": {
      "offset": [
        634,
        677
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9B"
    },
    "334": {
      "op": "JUMP"
    },
    "335": {
      "fn": "SubscriptionManager.isPolicyActive",
      "offset": [
        2513,
        2655
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "336": {
      "fn": "SubscriptionManager.isPolicyActive",
      "offset": [
        2513,
        2655
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "337": {
      "fn": "SubscriptionManager.isPolicyActive",
      "offset": [
        2513,
        2655
      ],
      "op": "DUP1",
      "path": "0"
    },
    "338": {
      "fn": "SubscriptionManager.isPolicyActive",
      "offset": [
        2513,
        2655
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "339": {
      "fn": "SubscriptionManager.isPolicyActive",
      "offset": [
        2513,
        2655
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15B"
    },
    "342": {
      "fn": "SubscriptionManager.isPolicyActive",
      "offset": [
        2513,
        2655
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "343": {
      "fn": "SubscriptionManager.isPolicyActive",
      "offset": [
        2513,
        2655
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "345": {
      "fn": "SubscriptionManager.isPolicyActive",
      "offset": [
        2513,
        2655
      ],
      "op": "DUP1",
      "path": "0"
    },
    "346": {
      "fn": "SubscriptionManager.isPolicyActive",
      "offset": [
        2513,
        2655
      ],
      "op": "REVERT",
      "path": "0"
    },
    "347": {
      "fn": "SubscriptionManager.isPolicyActive",
      "offset": [
        2513,
        2655
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "348": {
      "op": "POP"
    },
    "349": {
      "fn": "SubscriptionManager.isPolicyActive",
      "offset": [
        2513,
        2655
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x196"
    },
    "352": {
      "fn": "SubscriptionManager.isPolicyActive",
      "offset": [
        2513,
        2655
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16A"
    },
    "355": {
      "fn": "SubscriptionManager.isPolicyActive",
      "offset": [
        2513,
        2655
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "356": {
      "fn": "SubscriptionManager.isPolicyActive",
      "offset": [
        2513,
        2655
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "358": {
      "fn": "SubscriptionManager.isPolicyActive",
      "offset": [
        2513,
        2655
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5D4"
    },
    "361": {
      "fn": "SubscriptionManager.isPolicyActive",
      "jump": "i",
      "offset": [
        2513,
        2655
      ],
      "op": "JUMP",
      "path": "0"
    },
    "362": {
      "fn": "SubscriptionManager.isPolicyActive",
      "offset": [
        2513,
        2655
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "363": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "365": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "367": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "369": {
      "op": "SHL"
    },
    "370": {
      "op": "SUB"
    },
    "371": {
      "op": "NOT"
    },
    "372": {
      "fn": "SubscriptionManager.isPolicyActive",
      "offset": [
        2598,
        2617
      ],
      "op": "AND",
      "path": "0",
      "statement": 0
    },
    "373": {
      "fn": "SubscriptionManager.isPolicyActive",
      "offset": [
        2576,
        2580
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "375": {
      "fn": "SubscriptionManager.isPolicyActive",
      "offset": [
        2598,
        2617
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "376": {
      "fn": "SubscriptionManager.isPolicyActive",
      "offset": [
        2598,
        2617
      ],
      "op": "DUP2",
      "path": "0"
    },
    "377": {
      "fn": "SubscriptionManager.isPolicyActive",
      "offset": [
        2598,
        2617
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "378": {
      "fn": "SubscriptionManager.isPolicyActive",
      "offset": [
        2598,
        2606
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "380": {
      "fn": "SubscriptionManager.isPolicyActive",
      "offset": [
        2598,
        2617
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "382": {
      "fn": "SubscriptionManager.isPolicyActive",
      "offset": [
        2598,
        2617
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "383": {
      "fn": "SubscriptionManager.isPolicyActive",
      "offset": [
        2598,
        2617
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "385": {
      "fn": "SubscriptionManager.isPolicyActive",
      "offset": [
        2598,
        2617
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "386": {
      "fn": "SubscriptionManager.isPolicyActive",
      "offset": [
        2598,
        2617
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "387": {
      "fn": "SubscriptionManager.isPolicyActive",
      "offset": [
        2598,
        2630
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "389": {
      "fn": "SubscriptionManager.isPolicyActive",
      "offset": [
        2598,
        2630
      ],
      "op": "ADD",
      "path": "0"
    },
    "390": {
      "fn": "SubscriptionManager.isPolicyActive",
      "offset": [
        2598,
        2630
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "391": {
      "fn": "SubscriptionManager.isPolicyActive",
      "offset": [
        2633,
        2648
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "392": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "394": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "396": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "398": {
      "op": "SHL"
    },
    "399": {
      "op": "SUB"
    },
    "400": {
      "fn": "SubscriptionManager.isPolicyActive",
      "offset": [
        2598,
        2630
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "401": {
      "fn": "SubscriptionManager.isPolicyActive",
      "offset": [
        2598,
        2630
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "402": {
      "fn": "SubscriptionManager.isPolicyActive",
      "offset": [
        2598,
        2630
      ],
      "op": "AND",
      "path": "0"
    },
    "403": {
      "fn": "SubscriptionManager.isPolicyActive",
      "offset": [
        2598,
        2648
      ],
      "op": "GT",
      "path": "0"
    },
    "404": {
      "fn": "SubscriptionManager.isPolicyActive",
      "offset": [
        2598,
        2648
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "405": {
      "fn": "SubscriptionManager.isPolicyActive",
      "offset": [
        2513,
        2655
      ],
      "op": "JUMP",
      "path": "0"
    },
    "406": {
      "fn": "SubscriptionManager.isPolicyActive",
      "offset": [
        2513,
        2655
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "407": {
      "fn": "SubscriptionManager.isPolicyActive",
      "offset": [
        2513,
        2655
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "409": {
      "fn": "SubscriptionManager.isPolicyActive",
      "offset": [
        2513,
        2655
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "410": {
      "op": "SWAP1"
    },
    "411": {
      "op": "ISZERO"
    },
    "412": {
      "op": "ISZERO"
    },
    "413": {
      "op": "DUP2"
    },
    "414": {
      "op": "MSTORE"
    },
    "415": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "417": {
      "op": "ADD"
    },
    "418": {
      "fn": "SubscriptionManager.isPolicyActive",
      "offset": [
        2513,
        2655
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9B"
    },
    "421": {
      "op": "JUMP"
    },
    "422": {
      "offset": [
        600,
        628
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "423": {
      "fn": "SubscriptionManager.isPolicyActive",
      "offset": [
        600,
        628
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "424": {
      "fn": "SubscriptionManager.isPolicyActive",
      "offset": [
        600,
        628
      ],
      "op": "DUP1",
      "path": "0"
    },
    "425": {
      "fn": "SubscriptionManager.isPolicyActive",
      "offset": [
        600,
        628
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "426": {
      "fn": "SubscriptionManager.isPolicyActive",
      "offset": [
        600,
        628
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B2"
    },
    "429": {
      "fn": "SubscriptionManager.isPolicyActive",
      "offset": [
        600,
        628
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "430": {
      "fn": "SubscriptionManager.isPolicyActive",
      "offset": [
        600,
        628
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "432": {
      "fn": "SubscriptionManager.isPolicyActive",
      "offset": [
        600,
        628
      ],
      "op": "DUP1",
      "path": "0"
    },
    "433": {
      "fn": "SubscriptionManager.isPolicyActive",
      "offset": [
        600,
        628
      ],
      "op": "REVERT",
      "path": "0"
    },
    "434": {
      "fn": "SubscriptionManager.isPolicyActive",
      "offset": [
        600,
        628
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "435": {
      "op": "POP"
    },
    "436": {
      "offset": [
        600,
        628
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "438": {
      "fn": "SubscriptionManager.isPolicyActive",
      "offset": [
        600,
        628
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "439": {
      "fn": "SubscriptionManager.isPolicyActive",
      "offset": [
        600,
        628
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C6"
    },
    "442": {
      "fn": "SubscriptionManager.isPolicyActive",
      "offset": [
        600,
        628
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "443": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "445": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "447": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "449": {
      "op": "SHL"
    },
    "450": {
      "op": "SUB"
    },
    "451": {
      "offset": [
        600,
        628
      ],
      "op": "AND",
      "path": "0"
    },
    "452": {
      "fn": "SubscriptionManager.isPolicyActive",
      "offset": [
        600,
        628
      ],
      "op": "DUP2",
      "path": "0"
    },
    "453": {
      "fn": "SubscriptionManager.isPolicyActive",
      "offset": [
        600,
        628
      ],
      "op": "JUMP",
      "path": "0"
    },
    "454": {
      "fn": "SubscriptionManager.isPolicyActive",
      "offset": [
        600,
        628
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "455": {
      "fn": "SubscriptionManager.isPolicyActive",
      "offset": [
        600,
        628
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "457": {
      "fn": "SubscriptionManager.isPolicyActive",
      "offset": [
        600,
        628
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "458": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "460": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "462": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "464": {
      "op": "SHL"
    },
    "465": {
      "op": "SUB"
    },
    "466": {
      "op": "SWAP1"
    },
    "467": {
      "op": "SWAP2"
    },
    "468": {
      "op": "AND"
    },
    "469": {
      "op": "DUP2"
    },
    "470": {
      "op": "MSTORE"
    },
    "471": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "473": {
      "op": "ADD"
    },
    "474": {
      "offset": [
        600,
        628
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9B"
    },
    "477": {
      "op": "JUMP"
    },
    "478": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2661,
        2908
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "479": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2744,
        2749
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 1,
      "value": "0x0"
    },
    "481": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2744,
        2749
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "482": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "484": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "486": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "488": {
      "op": "SHL"
    },
    "489": {
      "op": "SUB"
    },
    "490": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2744,
        2749
      ],
      "op": "AND",
      "path": "0"
    },
    "491": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2730,
        2740
      ],
      "op": "CALLER",
      "path": "0"
    },
    "492": {
      "branch": 13,
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2730,
        2749
      ],
      "op": "EQ",
      "path": "0"
    },
    "493": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2722,
        2750
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F5"
    },
    "496": {
      "branch": 13,
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2722,
        2750
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "497": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2722,
        2750
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "499": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2722,
        2750
      ],
      "op": "DUP1",
      "path": "0"
    },
    "500": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2722,
        2750
      ],
      "op": "REVERT",
      "path": "0"
    },
    "501": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2722,
        2750
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "502": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2825,
        2859
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "504": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2825,
        2859
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "505": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2778,
        2799
      ],
      "op": "SELFBALANCE",
      "path": "0"
    },
    "506": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2778,
        2799
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "507": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2760,
        2775
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "509": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2760,
        2775
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "510": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "512": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "514": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "516": {
      "op": "SHL"
    },
    "517": {
      "op": "SUB"
    },
    "518": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2825,
        2839
      ],
      "op": "DUP5",
      "path": "0"
    },
    "519": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2825,
        2839
      ],
      "op": "AND",
      "path": "0"
    },
    "520": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2825,
        2839
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "521": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2778,
        2799
      ],
      "op": "DUP4",
      "path": "0"
    },
    "522": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2778,
        2799
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "523": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2760,
        2775
      ],
      "op": "DUP4",
      "path": "0"
    },
    "524": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2825,
        2859
      ],
      "op": "DUP2",
      "path": "0"
    },
    "525": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2760,
        2775
      ],
      "op": "DUP2",
      "path": "0"
    },
    "526": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2825,
        2859
      ],
      "op": "DUP2",
      "path": "0"
    },
    "527": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2778,
        2799
      ],
      "op": "DUP6",
      "path": "0"
    },
    "528": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2825,
        2839
      ],
      "op": "DUP8",
      "path": "0"
    },
    "529": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2825,
        2859
      ],
      "op": "GAS",
      "path": "0"
    },
    "530": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2825,
        2859
      ],
      "op": "CALL",
      "path": "0"
    },
    "531": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2825,
        2859
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "532": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2825,
        2859
      ],
      "op": "POP",
      "path": "0"
    },
    "533": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2825,
        2859
      ],
      "op": "POP",
      "path": "0"
    },
    "534": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2825,
        2859
      ],
      "op": "POP",
      "path": "0"
    },
    "535": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2825,
        2859
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "536": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2825,
        2859
      ],
      "op": "DUP1",
      "path": "0"
    },
    "537": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2825,
        2859
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "539": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2825,
        2859
      ],
      "op": "DUP2",
      "path": "0"
    },
    "540": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2825,
        2859
      ],
      "op": "EQ",
      "path": "0"
    },
    "541": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2825,
        2859
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x242"
    },
    "544": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2825,
        2859
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "545": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2825,
        2859
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "547": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2825,
        2859
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "548": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2825,
        2859
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "549": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2825,
        2859
      ],
      "op": "POP",
      "path": "0"
    },
    "550": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2825,
        2859
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "552": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2825,
        2859
      ],
      "op": "NOT",
      "path": "0"
    },
    "553": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2825,
        2859
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3F"
    },
    "555": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2825,
        2859
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "556": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2825,
        2859
      ],
      "op": "ADD",
      "path": "0"
    },
    "557": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2825,
        2859
      ],
      "op": "AND",
      "path": "0"
    },
    "558": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2825,
        2859
      ],
      "op": "DUP3",
      "path": "0"
    },
    "559": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2825,
        2859
      ],
      "op": "ADD",
      "path": "0"
    },
    "560": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2825,
        2859
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "562": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2825,
        2859
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "563": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2825,
        2859
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "564": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2825,
        2859
      ],
      "op": "DUP3",
      "path": "0"
    },
    "565": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2825,
        2859
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "566": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2825,
        2859
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "567": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2825,
        2859
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "569": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2825,
        2859
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "571": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2825,
        2859
      ],
      "op": "DUP5",
      "path": "0"
    },
    "572": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2825,
        2859
      ],
      "op": "ADD",
      "path": "0"
    },
    "573": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2825,
        2859
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "574": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2825,
        2859
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x247"
    },
    "577": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2825,
        2859
      ],
      "op": "JUMP",
      "path": "0"
    },
    "578": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2825,
        2859
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "579": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2825,
        2859
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "581": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2825,
        2859
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "582": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2825,
        2859
      ],
      "op": "POP",
      "path": "0"
    },
    "583": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2825,
        2859
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "584": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2825,
        2859
      ],
      "op": "POP",
      "path": "0"
    },
    "585": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2809,
        2859
      ],
      "op": "POP",
      "path": "0"
    },
    "586": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2809,
        2859
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "587": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2809,
        2859
      ],
      "op": "POP",
      "path": "0"
    },
    "588": {
      "branch": 14,
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2877,
        2881
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 2
    },
    "589": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2869,
        2901
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x28F"
    },
    "592": {
      "branch": 14,
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2869,
        2901
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "593": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2869,
        2901
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "595": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2869,
        2901
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "596": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "600": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "602": {
      "op": "SHL"
    },
    "603": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2869,
        2901
      ],
      "op": "DUP2",
      "path": "0"
    },
    "604": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2869,
        2901
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "605": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "607": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2869,
        2901
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "609": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2869,
        2901
      ],
      "op": "DUP3",
      "path": "0"
    },
    "610": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2869,
        2901
      ],
      "op": "ADD",
      "path": "0"
    },
    "611": {
      "op": "MSTORE"
    },
    "612": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "614": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "616": {
      "op": "DUP3"
    },
    "617": {
      "op": "ADD"
    },
    "618": {
      "op": "MSTORE"
    },
    "619": {
      "op": "PUSH15",
      "value": "0x2330B4B632B2103A3930B739B332B9"
    },
    "635": {
      "op": "PUSH1",
      "value": "0x89"
    },
    "637": {
      "op": "SHL"
    },
    "638": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "640": {
      "op": "DUP3"
    },
    "641": {
      "op": "ADD"
    },
    "642": {
      "op": "MSTORE"
    },
    "643": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "645": {
      "op": "ADD"
    },
    "646": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2869,
        2901
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "647": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2869,
        2901
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "649": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2869,
        2901
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "650": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2869,
        2901
      ],
      "op": "DUP1",
      "path": "0"
    },
    "651": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2869,
        2901
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "652": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2869,
        2901
      ],
      "op": "SUB",
      "path": "0"
    },
    "653": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2869,
        2901
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "654": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2869,
        2901
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "655": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2869,
        2901
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "656": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2712,
        2908
      ],
      "op": "POP",
      "path": "0"
    },
    "657": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2712,
        2908
      ],
      "op": "POP",
      "path": "0"
    },
    "658": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        2661,
        2908
      ],
      "op": "POP",
      "path": "0"
    },
    "659": {
      "fn": "SubscriptionManager.sweep",
      "jump": "o",
      "offset": [
        2661,
        2908
      ],
      "op": "JUMP",
      "path": "0"
    },
    "660": {
      "offset": [
        161,
        224
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "661": {
      "offset": [
        203,
        224
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A6"
    },
    "664": {
      "offset": [
        218,
        224
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x15180"
    },
    "668": {
      "offset": [
        148,
        155
      ],
      "op": "PUSH5",
      "path": "0",
      "value": "0xBA43B7400"
    },
    "674": {
      "offset": [
        203,
        224
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x605"
    },
    "677": {
      "fn": "SubscriptionManager.sweep",
      "jump": "i",
      "offset": [
        203,
        224
      ],
      "op": "JUMP",
      "path": "0"
    },
    "678": {
      "fn": "SubscriptionManager.sweep",
      "offset": [
        203,
        224
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "679": {
      "offset": [
        161,
        224
      ],
      "op": "DUP2",
      "path": "0"
    },
    "680": {
      "fn": "SubscriptionManager.sweep",
      "jump": "o",
      "offset": [
        161,
        224
      ],
      "op": "JUMP",
      "path": "0"
    },
    "681": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        747,
        1373
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "682": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        972,
        985
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 3
    },
    "683": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "685": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "687": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "689": {
      "op": "SHL"
    },
    "690": {
      "op": "SUB"
    },
    "691": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        954,
        985
      ],
      "op": "AND",
      "path": "0"
    },
    "692": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        954,
        969
      ],
      "op": "DUP3",
      "path": "0"
    },
    "693": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "695": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "697": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "699": {
      "op": "SHL"
    },
    "700": {
      "op": "SUB"
    },
    "701": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        954,
        985
      ],
      "op": "AND",
      "path": "0"
    },
    "702": {
      "branch": 15,
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        954,
        985
      ],
      "op": "LT",
      "path": "0"
    },
    "703": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        954,
        1032
      ],
      "op": "DUP1",
      "path": "0"
    },
    "704": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        954,
        1032
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "705": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        954,
        1032
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D2"
    },
    "708": {
      "branch": 15,
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        954,
        1032
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "709": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        954,
        1032
      ],
      "op": "POP",
      "path": "0"
    },
    "710": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        1019,
        1032
      ],
      "op": "DUP1",
      "path": "0"
    },
    "711": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "713": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "715": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "717": {
      "op": "SHL"
    },
    "718": {
      "op": "SUB"
    },
    "719": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        1001,
        1032
      ],
      "op": "AND",
      "path": "0"
    },
    "720": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        1001,
        1016
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "721": {
      "branch": 16,
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        1001,
        1032
      ],
      "op": "LT",
      "path": "0"
    },
    "722": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        954,
        1032
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "723": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        933,
        1076
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x313"
    },
    "726": {
      "branch": 16,
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        933,
        1076
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "727": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        933,
        1076
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "729": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        933,
        1076
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "730": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "734": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "736": {
      "op": "SHL"
    },
    "737": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        933,
        1076
      ],
      "op": "DUP2",
      "path": "0"
    },
    "738": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        933,
        1076
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "739": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "741": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        933,
        1076
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "743": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        933,
        1076
      ],
      "op": "DUP3",
      "path": "0"
    },
    "744": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        933,
        1076
      ],
      "op": "ADD",
      "path": "0"
    },
    "745": {
      "op": "MSTORE"
    },
    "746": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "748": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "750": {
      "op": "DUP3"
    },
    "751": {
      "op": "ADD"
    },
    "752": {
      "op": "MSTORE"
    },
    "753": {
      "op": "PUSH18",
      "value": "0x496E76616C69642074696D657374616D7073"
    },
    "772": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "774": {
      "op": "SHL"
    },
    "775": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "777": {
      "op": "DUP3"
    },
    "778": {
      "op": "ADD"
    },
    "779": {
      "op": "MSTORE"
    },
    "780": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "782": {
      "op": "ADD"
    },
    "783": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        933,
        1076
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x286"
    },
    "786": {
      "op": "JUMP"
    },
    "787": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        933,
        1076
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "788": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        1086,
        1101
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "790": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        1104,
        1135
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x31F"
    },
    "793": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        1120,
        1135
      ],
      "op": "DUP4",
      "path": "0"
    },
    "794": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        1104,
        1117
      ],
      "op": "DUP4",
      "path": "0"
    },
    "795": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        1104,
        1135
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x627"
    },
    "798": {
      "fn": "SubscriptionManager.createPolicy",
      "jump": "i",
      "offset": [
        1104,
        1135
      ],
      "op": "JUMP",
      "path": "0"
    },
    "799": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        1104,
        1135
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "800": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        1086,
        1135
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "801": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        1086,
        1135
      ],
      "op": "POP",
      "path": "0"
    },
    "802": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        1177,
        1178
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 4,
      "value": "0x0"
    },
    "804": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        1166,
        1174
      ],
      "op": "DUP2",
      "path": "0"
    },
    "805": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "807": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "809": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "811": {
      "op": "SHL"
    },
    "812": {
      "op": "SUB"
    },
    "813": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        1166,
        1178
      ],
      "op": "AND",
      "path": "0"
    },
    "814": {
      "branch": 17,
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        1166,
        1178
      ],
      "op": "GT",
      "path": "0"
    },
    "815": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        1166,
        1241
      ],
      "op": "DUP1",
      "path": "0"
    },
    "816": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        1166,
        1241
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "817": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        1166,
        1241
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x35E"
    },
    "820": {
      "branch": 17,
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        1166,
        1241
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "821": {
      "op": "POP"
    },
    "822": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "824": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "826": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "828": {
      "op": "SHL"
    },
    "829": {
      "op": "SUB"
    },
    "830": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        1207,
        1241
      ],
      "op": "DUP2",
      "path": "0"
    },
    "831": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        1207,
        1241
      ],
      "op": "AND",
      "path": "0"
    },
    "832": {
      "offset": [
        203,
        224
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x351"
    },
    "835": {
      "offset": [
        218,
        224
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x15180"
    },
    "839": {
      "offset": [
        148,
        155
      ],
      "op": "PUSH5",
      "path": "0",
      "value": "0xBA43B7400"
    },
    "845": {
      "offset": [
        203,
        224
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x605"
    },
    "848": {
      "fn": "SubscriptionManager.createPolicy",
      "jump": "i",
      "offset": [
        203,
        224
      ],
      "op": "JUMP",
      "path": "0"
    },
    "849": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        203,
        224
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "850": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        1207,
        1241
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x35B"
    },
    "853": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        1207,
        1241
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "854": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        1207,
        1241
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "855": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        1207,
        1241
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x64F"
    },
    "858": {
      "fn": "SubscriptionManager.createPolicy",
      "jump": "i",
      "offset": [
        1207,
        1241
      ],
      "op": "JUMP",
      "path": "0"
    },
    "859": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        1207,
        1241
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "860": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        1194,
        1203
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "861": {
      "branch": 18,
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        1194,
        1241
      ],
      "op": "EQ",
      "path": "0"
    },
    "862": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        1166,
        1241
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "863": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        1145,
        1251
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x367"
    },
    "866": {
      "branch": 18,
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        1145,
        1251
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "867": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        1145,
        1251
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "869": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        1145,
        1251
      ],
      "op": "DUP1",
      "path": "0"
    },
    "870": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        1145,
        1251
      ],
      "op": "REVERT",
      "path": "0"
    },
    "871": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        1145,
        1251
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "872": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        1296,
        1366
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 5,
      "value": "0x373"
    },
    "875": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        1310,
        1319
      ],
      "op": "DUP6",
      "path": "0"
    },
    "876": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        1321,
        1333
      ],
      "op": "DUP6",
      "path": "0"
    },
    "877": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        1335,
        1350
      ],
      "op": "DUP6",
      "path": "0"
    },
    "878": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        1352,
        1365
      ],
      "op": "DUP6",
      "path": "0"
    },
    "879": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        1296,
        1309
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x37B"
    },
    "882": {
      "fn": "SubscriptionManager.createPolicy",
      "jump": "i",
      "offset": [
        1296,
        1366
      ],
      "op": "JUMP",
      "path": "0"
    },
    "883": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        1296,
        1366
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "884": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        1296,
        1366
      ],
      "op": "POP",
      "path": "0"
    },
    "885": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        923,
        1373
      ],
      "op": "POP",
      "path": "0"
    },
    "886": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        747,
        1373
      ],
      "op": "POP",
      "path": "0"
    },
    "887": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        747,
        1373
      ],
      "op": "POP",
      "path": "0"
    },
    "888": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        747,
        1373
      ],
      "op": "POP",
      "path": "0"
    },
    "889": {
      "fn": "SubscriptionManager.createPolicy",
      "offset": [
        747,
        1373
      ],
      "op": "POP",
      "path": "0"
    },
    "890": {
      "fn": "SubscriptionManager.createPolicy",
      "jump": "o",
      "offset": [
        747,
        1373
      ],
      "op": "JUMP",
      "path": "0"
    },
    "891": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        1666,
        2507
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "892": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "894": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "896": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "898": {
      "op": "SHL"
    },
    "899": {
      "op": "SUB"
    },
    "900": {
      "op": "NOT"
    },
    "901": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        1886,
        1905
      ],
      "op": "DUP5",
      "path": "0",
      "statement": 6
    },
    "902": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        1886,
        1905
      ],
      "op": "AND",
      "path": "0"
    },
    "903": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        1840,
        1861
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "905": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        1886,
        1905
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "906": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        1886,
        1905
      ],
      "op": "DUP2",
      "path": "0"
    },
    "907": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        1886,
        1905
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "908": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        1886,
        1894
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "910": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        1886,
        1905
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "912": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        1886,
        1905
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "913": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        1886,
        1905
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "915": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        1886,
        1905
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "916": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        1886,
        1905
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "917": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        1936,
        1955
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 7,
      "value": "0x2"
    },
    "919": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        1936,
        1955
      ],
      "op": "DUP2",
      "path": "0"
    },
    "920": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        1936,
        1955
      ],
      "op": "ADD",
      "path": "0"
    },
    "921": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        1936,
        1955
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "922": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        1958,
        1973
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "923": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "925": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "927": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "929": {
      "op": "SHL"
    },
    "930": {
      "op": "SUB"
    },
    "931": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        1936,
        1955
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "932": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        1936,
        1955
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "933": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        1936,
        1955
      ],
      "op": "AND",
      "path": "0"
    },
    "934": {
      "branch": 19,
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        1936,
        1973
      ],
      "op": "LT",
      "path": "0"
    },
    "935": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        1915,
        2025
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F2"
    },
    "938": {
      "branch": 19,
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        1915,
        2025
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "939": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        1915,
        2025
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "941": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        1915,
        2025
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "942": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "946": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "948": {
      "op": "SHL"
    },
    "949": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        1915,
        2025
      ],
      "op": "DUP2",
      "path": "0"
    },
    "950": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        1915,
        2025
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "951": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "953": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        1915,
        2025
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "955": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        1915,
        2025
      ],
      "op": "DUP3",
      "path": "0"
    },
    "956": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        1915,
        2025
      ],
      "op": "ADD",
      "path": "0"
    },
    "957": {
      "op": "MSTORE"
    },
    "958": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "960": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "962": {
      "op": "DUP3"
    },
    "963": {
      "op": "ADD"
    },
    "964": {
      "op": "MSTORE"
    },
    "965": {
      "op": "PUSH32",
      "value": "0x506F6C6963792069732063757272656E746C7920616374697665000000000000"
    },
    "998": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1000": {
      "op": "DUP3"
    },
    "1001": {
      "op": "ADD"
    },
    "1002": {
      "op": "MSTORE"
    },
    "1003": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1005": {
      "op": "ADD"
    },
    "1006": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        1915,
        2025
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x286"
    },
    "1009": {
      "op": "JUMP"
    },
    "1010": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        1915,
        2025
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1011": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        2036,
        2072
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 8
    },
    "1012": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        2036,
        2072
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1013": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1015": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1017": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1019": {
      "op": "SHL"
    },
    "1020": {
      "op": "SUB"
    },
    "1021": {
      "op": "NOT"
    },
    "1022": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        2036,
        2072
      ],
      "op": "AND",
      "path": "0"
    },
    "1023": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        2061,
        2071
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1024": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        2036,
        2072
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1025": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        2036,
        2072
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1026": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        2036,
        2072
      ],
      "op": "OR",
      "path": "0"
    },
    "1027": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        2036,
        2072
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1028": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        2036,
        2072
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1029": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        2036,
        2072
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1031": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        2082,
        2103
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 9
    },
    "1032": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        2082,
        2103
      ],
      "op": "ADD",
      "path": "0"
    },
    "1033": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        2082,
        2121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1034": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        2082,
        2121
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1035": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1037": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1039": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1041": {
      "op": "SHL"
    },
    "1042": {
      "op": "SUB"
    },
    "1043": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        2082,
        2121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1044": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        2082,
        2121
      ],
      "op": "DUP8",
      "path": "0"
    },
    "1045": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        2082,
        2121
      ],
      "op": "AND",
      "path": "0"
    },
    "1046": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1048": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1050": {
      "op": "SHL"
    },
    "1051": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        2082,
        2121
      ],
      "op": "MUL",
      "path": "0"
    },
    "1052": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1061": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1063": {
      "op": "SHL"
    },
    "1064": {
      "op": "NOT"
    },
    "1065": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        2082,
        2121
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1066": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        2082,
        2121
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1067": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        2082,
        2121
      ],
      "op": "AND",
      "path": "0"
    },
    "1068": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        2082,
        2121
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1069": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        2082,
        2121
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1070": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        2082,
        2121
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1071": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        2082,
        2121
      ],
      "op": "OR",
      "path": "0"
    },
    "1072": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        2082,
        2121
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1073": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        2082,
        2121
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1074": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        2082,
        2121
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1075": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        2131,
        2150
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 10,
      "value": "0x2"
    },
    "1077": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        2131,
        2150
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1078": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        2131,
        2150
      ],
      "op": "ADD",
      "path": "0"
    },
    "1079": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        2131,
        2166
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1080": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        2131,
        2166
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1081": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        2131,
        2166
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1082": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        2131,
        2166
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1083": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        2131,
        2166
      ],
      "op": "AND",
      "path": "0"
    },
    "1084": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1093": {
      "op": "NOT"
    },
    "1094": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        2131,
        2166
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1095": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        2131,
        2166
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1096": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        2131,
        2166
      ],
      "op": "AND",
      "path": "0"
    },
    "1097": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        2131,
        2166
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1098": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        2131,
        2166
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1099": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        2131,
        2166
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1100": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        2131,
        2166
      ],
      "op": "OR",
      "path": "0"
    },
    "1101": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        2131,
        2166
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1102": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        2131,
        2166
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1103": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1105": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1107": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1109": {
      "op": "SHL"
    },
    "1110": {
      "op": "SUB"
    },
    "1111": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        2181,
        2207
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1112": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        2181,
        2207
      ],
      "op": "AND",
      "path": "0"
    },
    "1113": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        2181,
        2207
      ],
      "op": "EQ",
      "path": "0"
    },
    "1114": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        2181,
        2207
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1115": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        2181,
        2207
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1116": {
      "branch": 20,
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        2181,
        2207
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1117": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        2181,
        2237
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x46E"
    },
    "1120": {
      "branch": 20,
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        2181,
        2237
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1121": {
      "op": "POP"
    },
    "1122": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1124": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1126": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1128": {
      "op": "SHL"
    },
    "1129": {
      "op": "SUB"
    },
    "1130": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        2211,
        2237
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1131": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        2211,
        2237
      ],
      "op": "AND",
      "path": "0"
    },
    "1132": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        2211,
        2237
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1133": {
      "branch": 21,
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        2211,
        2237
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1134": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        2181,
        2237
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1135": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        2177,
        2291
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1136": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        2177,
        2291
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x491"
    },
    "1139": {
      "branch": 21,
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        2177,
        2291
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1140": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        2253,
        2265
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 11,
      "value": "0x1"
    },
    "1142": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        2253,
        2265
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1143": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        2253,
        2265
      ],
      "op": "ADD",
      "path": "0"
    },
    "1144": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        2253,
        2280
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1145": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        2253,
        2280
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1146": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1148": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1150": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1152": {
      "op": "SHL"
    },
    "1153": {
      "op": "SUB"
    },
    "1154": {
      "op": "NOT"
    },
    "1155": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        2253,
        2280
      ],
      "op": "AND",
      "path": "0"
    },
    "1156": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1158": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1160": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1162": {
      "op": "SHL"
    },
    "1163": {
      "op": "SUB"
    },
    "1164": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        2253,
        2280
      ],
      "op": "DUP7",
      "path": "0"
    },
    "1165": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        2253,
        2280
      ],
      "op": "AND",
      "path": "0"
    },
    "1166": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        2253,
        2280
      ],
      "op": "OR",
      "path": "0"
    },
    "1167": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        2253,
        2280
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1168": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        2253,
        2280
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1169": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        2177,
        2291
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1170": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1172": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1174": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1176": {
      "op": "SHL"
    },
    "1177": {
      "op": "SUB"
    },
    "1178": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        2380,
        2406
      ],
      "op": "DUP5",
      "path": "0",
      "statement": 12
    },
    "1179": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        2380,
        2406
      ],
      "op": "AND",
      "path": "0"
    },
    "1180": {
      "branch": 22,
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        2380,
        2406
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1181": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        2380,
        2434
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4A6"
    },
    "1184": {
      "branch": 22,
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        2380,
        2434
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1185": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        2422,
        2434
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1186": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        2380,
        2434
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4A8"
    },
    "1189": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        2380,
        2434
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1190": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        2380,
        2434
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1191": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        2409,
        2419
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1192": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        2380,
        2434
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1193": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        2306,
        2500
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1195": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        2306,
        2500
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1196": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        2306,
        2500
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1197": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1199": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1201": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1203": {
      "op": "SHL"
    },
    "1204": {
      "op": "SUB"
    },
    "1205": {
      "op": "DUP1"
    },
    "1206": {
      "op": "DUP8"
    },
    "1207": {
      "op": "AND"
    },
    "1208": {
      "op": "DUP3"
    },
    "1209": {
      "op": "MSTORE"
    },
    "1210": {
      "op": "DUP6"
    },
    "1211": {
      "op": "AND"
    },
    "1212": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1214": {
      "op": "DUP3"
    },
    "1215": {
      "op": "ADD"
    },
    "1216": {
      "op": "MSTORE"
    },
    "1217": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1219": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1221": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1223": {
      "op": "SHL"
    },
    "1224": {
      "op": "SUB"
    },
    "1225": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        2306,
        2500
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1226": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        2306,
        2500
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1227": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        2306,
        2500
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1228": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        2306,
        2500
      ],
      "op": "AND",
      "path": "0"
    },
    "1229": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        2306,
        2500
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1230": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        2356,
        2366
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1231": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        2356,
        2366
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1232": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1234": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1236": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1238": {
      "op": "SHL"
    },
    "1239": {
      "op": "SUB"
    },
    "1240": {
      "op": "NOT"
    },
    "1241": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        2306,
        2500
      ],
      "op": "DUP10",
      "path": "0"
    },
    "1242": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        2306,
        2500
      ],
      "op": "AND",
      "path": "0"
    },
    "1243": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        2306,
        2500
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1244": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        2306,
        2500
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xDF690468DD0CDB13875078E35D821B9459A7E0E4B5BAFB1B76AD3930DB25BBA3"
    },
    "1277": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        2306,
        2500
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1278": {
      "op": "ADD"
    },
    "1279": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        2306,
        2500
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1281": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        2306,
        2500
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1282": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        2306,
        2500
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1283": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        2306,
        2500
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1284": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        2306,
        2500
      ],
      "op": "SUB",
      "path": "0"
    },
    "1285": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        2306,
        2500
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1286": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        2306,
        2500
      ],
      "op": "LOG4",
      "path": "0"
    },
    "1287": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        1666,
        2507
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "1288": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        1666,
        2507
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1289": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        1666,
        2507
      ],
      "op": "POP",
      "path": "0"
    },
    "1290": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        1666,
        2507
      ],
      "op": "POP",
      "path": "0"
    },
    "1291": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        1666,
        2507
      ],
      "op": "POP",
      "path": "0"
    },
    "1292": {
      "fn": "SubscriptionManager._createPolicy",
      "offset": [
        1666,
        2507
      ],
      "op": "POP",
      "path": "0"
    },
    "1293": {
      "fn": "SubscriptionManager._createPolicy",
      "jump": "o",
      "offset": [
        1666,
        2507
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1294": {
      "op": "JUMPDEST"
    },
    "1295": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1297": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1299": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1301": {
      "op": "SHL"
    },
    "1302": {
      "op": "SUB"
    },
    "1303": {
      "op": "DUP2"
    },
    "1304": {
      "op": "AND"
    },
    "1305": {
      "op": "DUP2"
    },
    "1306": {
      "op": "EQ"
    },
    "1307": {
      "op": "PUSH2",
      "value": "0x523"
    },
    "1310": {
      "op": "JUMPI"
    },
    "1311": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1313": {
      "op": "DUP1"
    },
    "1314": {
      "op": "REVERT"
    },
    "1315": {
      "op": "JUMPDEST"
    },
    "1316": {
      "op": "POP"
    },
    "1317": {
      "jump": "o",
      "op": "JUMP"
    },
    "1318": {
      "op": "JUMPDEST"
    },
    "1319": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1321": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1323": {
      "op": "DUP3"
    },
    "1324": {
      "op": "DUP5"
    },
    "1325": {
      "op": "SUB"
    },
    "1326": {
      "op": "SLT"
    },
    "1327": {
      "op": "ISZERO"
    },
    "1328": {
      "op": "PUSH2",
      "value": "0x538"
    },
    "1331": {
      "op": "JUMPI"
    },
    "1332": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1334": {
      "op": "DUP1"
    },
    "1335": {
      "op": "REVERT"
    },
    "1336": {
      "op": "JUMPDEST"
    },
    "1337": {
      "op": "DUP2"
    },
    "1338": {
      "op": "CALLDATALOAD"
    },
    "1339": {
      "op": "PUSH2",
      "value": "0x543"
    },
    "1342": {
      "op": "DUP2"
    },
    "1343": {
      "op": "PUSH2",
      "value": "0x50E"
    },
    "1346": {
      "jump": "i",
      "op": "JUMP"
    },
    "1347": {
      "op": "JUMPDEST"
    },
    "1348": {
      "op": "SWAP4"
    },
    "1349": {
      "op": "SWAP3"
    },
    "1350": {
      "op": "POP"
    },
    "1351": {
      "op": "POP"
    },
    "1352": {
      "op": "POP"
    },
    "1353": {
      "jump": "o",
      "op": "JUMP"
    },
    "1354": {
      "op": "JUMPDEST"
    },
    "1355": {
      "op": "DUP1"
    },
    "1356": {
      "op": "CALLDATALOAD"
    },
    "1357": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1359": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1361": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1363": {
      "op": "SHL"
    },
    "1364": {
      "op": "SUB"
    },
    "1365": {
      "op": "NOT"
    },
    "1366": {
      "op": "DUP2"
    },
    "1367": {
      "op": "AND"
    },
    "1368": {
      "op": "DUP2"
    },
    "1369": {
      "op": "EQ"
    },
    "1370": {
      "op": "PUSH2",
      "value": "0x562"
    },
    "1373": {
      "op": "JUMPI"
    },
    "1374": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1376": {
      "op": "DUP1"
    },
    "1377": {
      "op": "REVERT"
    },
    "1378": {
      "op": "JUMPDEST"
    },
    "1379": {
      "op": "SWAP2"
    },
    "1380": {
      "op": "SWAP1"
    },
    "1381": {
      "op": "POP"
    },
    "1382": {
      "jump": "o",
      "op": "JUMP"
    },
    "1383": {
      "op": "JUMPDEST"
    },
    "1384": {
      "op": "DUP1"
    },
    "1385": {
      "op": "CALLDATALOAD"
    },
    "1386": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1388": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1390": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1392": {
      "op": "SHL"
    },
    "1393": {
      "op": "SUB"
    },
    "1394": {
      "op": "DUP2"
    },
    "1395": {
      "op": "AND"
    },
    "1396": {
      "op": "DUP2"
    },
    "1397": {
      "op": "EQ"
    },
    "1398": {
      "op": "PUSH2",
      "value": "0x562"
    },
    "1401": {
      "op": "JUMPI"
    },
    "1402": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1404": {
      "op": "DUP1"
    },
    "1405": {
      "op": "REVERT"
    },
    "1406": {
      "op": "JUMPDEST"
    },
    "1407": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1409": {
      "op": "DUP1"
    },
    "1410": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1412": {
      "op": "DUP1"
    },
    "1413": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1415": {
      "op": "DUP6"
    },
    "1416": {
      "op": "DUP8"
    },
    "1417": {
      "op": "SUB"
    },
    "1418": {
      "op": "SLT"
    },
    "1419": {
      "op": "ISZERO"
    },
    "1420": {
      "op": "PUSH2",
      "value": "0x594"
    },
    "1423": {
      "op": "JUMPI"
    },
    "1424": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1426": {
      "op": "DUP1"
    },
    "1427": {
      "op": "REVERT"
    },
    "1428": {
      "op": "JUMPDEST"
    },
    "1429": {
      "op": "PUSH2",
      "value": "0x59D"
    },
    "1432": {
      "op": "DUP6"
    },
    "1433": {
      "op": "PUSH2",
      "value": "0x54A"
    },
    "1436": {
      "jump": "i",
      "op": "JUMP"
    },
    "1437": {
      "op": "JUMPDEST"
    },
    "1438": {
      "op": "SWAP4"
    },
    "1439": {
      "op": "POP"
    },
    "1440": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1442": {
      "op": "DUP6"
    },
    "1443": {
      "op": "ADD"
    },
    "1444": {
      "op": "CALLDATALOAD"
    },
    "1445": {
      "op": "PUSH2",
      "value": "0x5AD"
    },
    "1448": {
      "op": "DUP2"
    },
    "1449": {
      "op": "PUSH2",
      "value": "0x50E"
    },
    "1452": {
      "jump": "i",
      "op": "JUMP"
    },
    "1453": {
      "op": "JUMPDEST"
    },
    "1454": {
      "op": "SWAP3"
    },
    "1455": {
      "op": "POP"
    },
    "1456": {
      "op": "PUSH2",
      "value": "0x5BB"
    },
    "1459": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1461": {
      "op": "DUP7"
    },
    "1462": {
      "op": "ADD"
    },
    "1463": {
      "op": "PUSH2",
      "value": "0x567"
    },
    "1466": {
      "jump": "i",
      "op": "JUMP"
    },
    "1467": {
      "op": "JUMPDEST"
    },
    "1468": {
      "op": "SWAP2"
    },
    "1469": {
      "op": "POP"
    },
    "1470": {
      "op": "PUSH2",
      "value": "0x5C9"
    },
    "1473": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1475": {
      "op": "DUP7"
    },
    "1476": {
      "op": "ADD"
    },
    "1477": {
      "op": "PUSH2",
      "value": "0x567"
    },
    "1480": {
      "jump": "i",
      "op": "JUMP"
    },
    "1481": {
      "op": "JUMPDEST"
    },
    "1482": {
      "op": "SWAP1"
    },
    "1483": {
      "op": "POP"
    },
    "1484": {
      "op": "SWAP3"
    },
    "1485": {
      "op": "SWAP6"
    },
    "1486": {
      "op": "SWAP2"
    },
    "1487": {
      "op": "SWAP5"
    },
    "1488": {
      "op": "POP"
    },
    "1489": {
      "op": "SWAP3"
    },
    "1490": {
      "op": "POP"
    },
    "1491": {
      "jump": "o",
      "op": "JUMP"
    },
    "1492": {
      "op": "JUMPDEST"
    },
    "1493": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1495": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1497": {
      "op": "DUP3"
    },
    "1498": {
      "op": "DUP5"
    },
    "1499": {
      "op": "SUB"
    },
    "1500": {
      "op": "SLT"
    },
    "1501": {
      "op": "ISZERO"
    },
    "1502": {
      "op": "PUSH2",
      "value": "0x5E6"
    },
    "1505": {
      "op": "JUMPI"
    },
    "1506": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1508": {
      "op": "DUP1"
    },
    "1509": {
      "op": "REVERT"
    },
    "1510": {
      "op": "JUMPDEST"
    },
    "1511": {
      "op": "PUSH2",
      "value": "0x543"
    },
    "1514": {
      "op": "DUP3"
    },
    "1515": {
      "op": "PUSH2",
      "value": "0x54A"
    },
    "1518": {
      "jump": "i",
      "op": "JUMP"
    },
    "1519": {
      "op": "JUMPDEST"
    },
    "1520": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1525": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1527": {
      "op": "SHL"
    },
    "1528": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1530": {
      "op": "MSTORE"
    },
    "1531": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "1533": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1535": {
      "op": "MSTORE"
    },
    "1536": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1538": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1540": {
      "op": "REVERT"
    },
    "1541": {
      "op": "JUMPDEST"
    },
    "1542": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1544": {
      "op": "DUP3"
    },
    "1545": {
      "op": "PUSH2",
      "value": "0x622"
    },
    "1548": {
      "op": "JUMPI"
    },
    "1549": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1554": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1556": {
      "op": "SHL"
    },
    "1557": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1559": {
      "op": "MSTORE"
    },
    "1560": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "1562": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1564": {
      "op": "MSTORE"
    },
    "1565": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1567": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1569": {
      "op": "REVERT"
    },
    "1570": {
      "op": "JUMPDEST"
    },
    "1571": {
      "op": "POP"
    },
    "1572": {
      "op": "DIV"
    },
    "1573": {
      "op": "SWAP1"
    },
    "1574": {
      "jump": "o",
      "op": "JUMP"
    },
    "1575": {
      "op": "JUMPDEST"
    },
    "1576": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1578": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1580": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1582": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1584": {
      "op": "SHL"
    },
    "1585": {
      "op": "SUB"
    },
    "1586": {
      "op": "DUP4"
    },
    "1587": {
      "op": "DUP2"
    },
    "1588": {
      "op": "AND"
    },
    "1589": {
      "op": "SWAP1"
    },
    "1590": {
      "op": "DUP4"
    },
    "1591": {
      "op": "AND"
    },
    "1592": {
      "op": "DUP2"
    },
    "1593": {
      "op": "DUP2"
    },
    "1594": {
      "op": "LT"
    },
    "1595": {
      "op": "ISZERO"
    },
    "1596": {
      "op": "PUSH2",
      "value": "0x647"
    },
    "1599": {
      "op": "JUMPI"
    },
    "1600": {
      "op": "PUSH2",
      "value": "0x647"
    },
    "1603": {
      "op": "PUSH2",
      "value": "0x5EF"
    },
    "1606": {
      "jump": "i",
      "op": "JUMP"
    },
    "1607": {
      "op": "JUMPDEST"
    },
    "1608": {
      "op": "SUB"
    },
    "1609": {
      "op": "SWAP4"
    },
    "1610": {
      "op": "SWAP3"
    },
    "1611": {
      "op": "POP"
    },
    "1612": {
      "op": "POP"
    },
    "1613": {
      "op": "POP"
    },
    "1614": {
      "jump": "o",
      "op": "JUMP"
    },
    "1615": {
      "op": "JUMPDEST"
    },
    "1616": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1618": {
      "op": "DUP2"
    },
    "1619": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1621": {
      "op": "NOT"
    },
    "1622": {
      "op": "DIV"
    },
    "1623": {
      "op": "DUP4"
    },
    "1624": {
      "op": "GT"
    },
    "1625": {
      "op": "DUP3"
    },
    "1626": {
      "op": "ISZERO"
    },
    "1627": {
      "op": "ISZERO"
    },
    "1628": {
      "op": "AND"
    },
    "1629": {
      "op": "ISZERO"
    },
    "1630": {
      "op": "PUSH2",
      "value": "0x669"
    },
    "1633": {
      "op": "JUMPI"
    },
    "1634": {
      "op": "PUSH2",
      "value": "0x669"
    },
    "1637": {
      "op": "PUSH2",
      "value": "0x5EF"
    },
    "1640": {
      "jump": "i",
      "op": "JUMP"
    },
    "1641": {
      "op": "JUMPDEST"
    },
    "1642": {
      "op": "POP"
    },
    "1643": {
      "op": "MUL"
    },
    "1644": {
      "op": "SWAP1"
    },
    "1645": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "88e2c20882129287dfcd6513c3464510bc0dd8de",
  "source": "// SPDX-License-Identifier: AGPL-3.0-or-later\n\npragma solidity ^0.8.0;\n\ncontract SubscriptionManager {\n\n    uint256 private constant RATE_PER_DAY = 50 gwei;\n    uint256 public constant RATE_PER_SECOND = RATE_PER_DAY / 1 days;\n\n    struct Policy { // TODO: Optimize struct layout\n        address payable sponsor;\n        address owner;\n        uint64 startTimestamp;\n        uint64 endTimestamp;\n    }\n\n    event PolicyCreated(\n        bytes16 indexed policyId,\n        address indexed sponsor,\n        address indexed owner,\n        uint64 startTimestamp,\n        uint64 endTimestamp\n    );\n    \n    address payable public owner;\n    mapping (bytes16 => Policy) public policies;\n\n    constructor(){\n        owner = payable(msg.sender);\n    }\n\n    function createPolicy(\n        bytes16 _policyId,\n        address _policyOwner,\n        uint64 _startTimestamp,\n        uint64 _endTimestamp\n    )\n        external payable\n    {\n        require(\n            _startTimestamp < _endTimestamp &&\n            block.timestamp < _endTimestamp,\n            \"Invalid timestamps\"\n        );\n        uint64 duration = _endTimestamp - _startTimestamp;\n        require(\n            duration > 0 &&\n            msg.value == RATE_PER_SECOND * uint64(duration)\n        );\n        //Policy storage policy = \n        _createPolicy(_policyId, _policyOwner, _startTimestamp, _endTimestamp);\n    }\n\n    /**\n    * @notice Create policy\n    * @param _policyId Policy id\n    * @param _policyOwner Policy owner. Zero address means sender is owner\n    * @param _startTimestamp Start timestamp of the policy in seconds\n    * @param _endTimestamp End timestamp of the policy in seconds\n    */\n    function _createPolicy(\n        bytes16 _policyId,\n        address _policyOwner,\n        uint64 _startTimestamp,\n        uint64 _endTimestamp\n    )\n        internal returns (Policy storage policy)\n    {\n        policy = policies[_policyId];\n        require(\n            policy.endTimestamp < block.timestamp,\n            \"Policy is currently active\"\n        );\n\n        policy.sponsor = payable(msg.sender);\n        policy.startTimestamp = _startTimestamp;\n        policy.endTimestamp = _endTimestamp;\n\n        if (_policyOwner != msg.sender && _policyOwner != address(0)) {\n            policy.owner = _policyOwner;\n        }\n\n        emit PolicyCreated(\n            _policyId,\n            msg.sender,\n            _policyOwner == address(0) ? msg.sender : _policyOwner,\n            _startTimestamp,\n            _endTimestamp\n        );\n    }\n\n    function isPolicyActive(bytes16 _policyID) public view returns(bool){\n        return policies[_policyID].endTimestamp > block.timestamp;\n    }\n\n    function sweep(address payable recipient) external {\n        require(msg.sender == owner);\n        uint256 balance = address(this).balance;\n        (bool sent, ) = recipient.call{value: balance}(\"\");\n        require(sent, \"Failed transfer\");\n    }\n\n}",
  "sourceMap": "72:2839:0:-:0;;;684:57;;;;;;;;;-1:-1:-1;707:5:0;:27;;-1:-1:-1;;;;;;707:27:0;723:10;707:27;;;72:2839;;;;;;",
  "sourcePath": "contracts/SubscriptionManager.sol",
  "type": "contract"
}